I"³ <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib.pylab</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="o">%</span><span class="n">matplotlib</span> <span class="n">inline</span>
<span class="kn">import</span> <span class="nn">os</span>
<span class="kn">from</span> <span class="nn">IPython.display</span> <span class="kn">import</span> <span class="n">display</span>
<span class="kn">import</span> <span class="nn">seaborn</span> <span class="k">as</span> <span class="n">sns</span>
<span class="n">sns</span><span class="o">.</span><span class="nb">set</span><span class="p">(</span><span class="n">context</span><span class="o">=</span><span class="s">'notebook'</span><span class="p">)</span>
<span class="kn">import</span> <span class="nn">pandas_profiling</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">pd</span><span class="o">.</span><span class="n">set_option</span><span class="p">(</span><span class="s">'display.max_columns'</span><span class="p">,</span> <span class="bp">None</span><span class="p">)</span>
<span class="n">pd</span><span class="o">.</span><span class="n">set_option</span><span class="p">(</span><span class="s">'display.max_rows'</span><span class="p">,</span> <span class="bp">None</span><span class="p">)</span>
</code></pre></div></div>

<h1 id="mathrmregression-for-predicting-continuous-outcomes"><script type="math/tex">\mathrm{Regression\, for\, predicting\, continuous\, outcomes}</script></h1>

<h3 id="dataset">Dataset:</h3>

<p>Define the problem: We want to establish linear relationship between minimum temperature and maximum temperature in Barajas Airport in Madrid, between 1997 and 2015. The dataset in this work comes from <a href="https://www.kaggle.com/juliansimon/weather_madrid_lemd_1997_2015.csv">Kaggle</a></p>

<h4 id="main-point-we-are-trying-to-build-a-linear-model-that-will-predict-maximum-temperature-from-minimum-temperature">Main point: we are trying to build a linear model that will predict maximum temperature from minimum temperature.</h4>

<p>Clearly, we see that this is a supervised machine leaning - regression - type of a problem.  An output to this problem is a continuous quantity.</p>

<h3 id="read-dataset">Read dataset</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">file</span> <span class="o">=</span> <span class="s">'weather_madrid_lemd_1997_2015.csv.zip'</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="nb">file</span><span class="p">,</span> <span class="n">compression</span> <span class="o">=</span> <span class="s">'zip'</span><span class="p">)</span>

<span class="n">df1</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">copy</span><span class="p">()</span>
</code></pre></div></div>

<h3 id="dataset-information">Dataset information:</h3>

<p>The info() method is useful to get a quick description of the data</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">display</span><span class="p">(</span><span class="n">df1</span><span class="o">.</span><span class="n">info</span><span class="p">())</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 6812 entries, 0 to 6811
Data columns (total 23 columns):
CET                            6812 non-null object
Max TemperatureC               6810 non-null float64
Mean TemperatureC              6809 non-null float64
Min TemperatureC               6810 non-null float64
Dew PointC                     6810 non-null float64
MeanDew PointC                 6810 non-null float64
Min DewpointC                  6810 non-null float64
Max Humidity                   6810 non-null float64
 Mean Humidity                 6810 non-null float64
 Min Humidity                  6810 non-null float64
 Max Sea Level PressurehPa     6812 non-null int64
 Mean Sea Level PressurehPa    6812 non-null int64
 Min Sea Level PressurehPa     6812 non-null int64
 Max VisibilityKm              5872 non-null float64
 Mean VisibilityKm             5872 non-null float64
 Min VisibilitykM              5872 non-null float64
 Max Wind SpeedKm/h            6812 non-null int64
 Mean Wind SpeedKm/h           6812 non-null int64
 Max Gust SpeedKm/h            3506 non-null float64
Precipitationmm                6812 non-null float64
 CloudCover                    5440 non-null float64
 Events                        1798 non-null object
WindDirDegrees                 6812 non-null int64
dtypes: float64(15), int64(6), object(2)
memory usage: 1.2+ MB



None
</code></pre></div></div>

<ul>
  <li>
    <p>NB: There are 6812 instances in the dataset, which means that it is very small by Machine Learning standards, but itâ€™s perfect to get started.</p>
  </li>
  <li>
    <p>All attributes are numerical, except the <code class="highlighter-rouge">CET</code> and <code class="highlighter-rouge">Events</code> field</p>
  </li>
</ul>

<h3 id="shape-of-dataset">Shape of dataset:</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df1</span><span class="o">.</span><span class="n">shape</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(6812, 23)
</code></pre></div></div>

<h3 id="features-of-each-instance-in-the-dataset">Features of each instance in the dataset:</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df1</span><span class="o">.</span><span class="n">columns</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Index(['CET', 'Max TemperatureC', 'Mean TemperatureC', 'Min TemperatureC',
       'Dew PointC', 'MeanDew PointC', 'Min DewpointC', 'Max Humidity',
       ' Mean Humidity', ' Min Humidity', ' Max Sea Level PressurehPa',
       ' Mean Sea Level PressurehPa', ' Min Sea Level PressurehPa',
       ' Max VisibilityKm', ' Mean VisibilityKm', ' Min VisibilitykM',
       ' Max Wind SpeedKm/h', ' Mean Wind SpeedKm/h', ' Max Gust SpeedKm/h',
       'Precipitationmm', ' CloudCover', ' Events', 'WindDirDegrees'],
      dtype='object')
</code></pre></div></div>

<h3 id="take-a-quick-look-at-the-data-structure">Take a Quick Look at the Data Structure</h3>

<p>Letâ€™s take a look at the top five rows using the DataFrameâ€™s head() method</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">display</span><span class="p">(</span><span class="n">df1</span><span class="o">.</span><span class="n">head</span><span class="p">(</span><span class="mi">8</span><span class="p">))</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>CET</th>
      <th>Max TemperatureC</th>
      <th>Mean TemperatureC</th>
      <th>Min TemperatureC</th>
      <th>Dew PointC</th>
      <th>MeanDew PointC</th>
      <th>Min DewpointC</th>
      <th>Max Humidity</th>
      <th>Mean Humidity</th>
      <th>Min Humidity</th>
      <th>Max Sea Level PressurehPa</th>
      <th>Mean Sea Level PressurehPa</th>
      <th>Min Sea Level PressurehPa</th>
      <th>Max VisibilityKm</th>
      <th>Mean VisibilityKm</th>
      <th>Min VisibilitykM</th>
      <th>Max Wind SpeedKm/h</th>
      <th>Mean Wind SpeedKm/h</th>
      <th>Max Gust SpeedKm/h</th>
      <th>Precipitationmm</th>
      <th>CloudCover</th>
      <th>Events</th>
      <th>WindDirDegrees</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1997-1-1</td>
      <td>7.0</td>
      <td>4.0</td>
      <td>2.0</td>
      <td>5.0</td>
      <td>3.0</td>
      <td>2.0</td>
      <td>100.0</td>
      <td>95.0</td>
      <td>76.0</td>
      <td>1010</td>
      <td>1008</td>
      <td>1004</td>
      <td>10.0</td>
      <td>9.0</td>
      <td>4.0</td>
      <td>13</td>
      <td>6</td>
      <td>NaN</td>
      <td>0.0</td>
      <td>6.0</td>
      <td>NaN</td>
      <td>229</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1997-1-2</td>
      <td>7.0</td>
      <td>3.0</td>
      <td>0.0</td>
      <td>6.0</td>
      <td>3.0</td>
      <td>0.0</td>
      <td>100.0</td>
      <td>92.0</td>
      <td>71.0</td>
      <td>1007</td>
      <td>1003</td>
      <td>997</td>
      <td>10.0</td>
      <td>9.0</td>
      <td>4.0</td>
      <td>26</td>
      <td>8</td>
      <td>47.0</td>
      <td>0.0</td>
      <td>5.0</td>
      <td>Rain</td>
      <td>143</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1997-1-3</td>
      <td>5.0</td>
      <td>3.0</td>
      <td>2.0</td>
      <td>5.0</td>
      <td>1.0</td>
      <td>-1.0</td>
      <td>100.0</td>
      <td>85.0</td>
      <td>70.0</td>
      <td>1005</td>
      <td>999</td>
      <td>996</td>
      <td>10.0</td>
      <td>10.0</td>
      <td>7.0</td>
      <td>27</td>
      <td>19</td>
      <td>NaN</td>
      <td>0.0</td>
      <td>6.0</td>
      <td>Rain-Snow</td>
      <td>256</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1997-1-4</td>
      <td>7.0</td>
      <td>3.0</td>
      <td>-1.0</td>
      <td>-2.0</td>
      <td>-3.0</td>
      <td>-4.0</td>
      <td>86.0</td>
      <td>63.0</td>
      <td>49.0</td>
      <td>1012</td>
      <td>1010</td>
      <td>1005</td>
      <td>10.0</td>
      <td>10.0</td>
      <td>10.0</td>
      <td>27</td>
      <td>19</td>
      <td>40.0</td>
      <td>0.0</td>
      <td>2.0</td>
      <td>NaN</td>
      <td>284</td>
    </tr>
    <tr>
      <th>4</th>
      <td>1997-1-5</td>
      <td>2.0</td>
      <td>0.0</td>
      <td>-1.0</td>
      <td>2.0</td>
      <td>0.0</td>
      <td>-3.0</td>
      <td>100.0</td>
      <td>95.0</td>
      <td>86.0</td>
      <td>1012</td>
      <td>1008</td>
      <td>1005</td>
      <td>10.0</td>
      <td>5.0</td>
      <td>1.0</td>
      <td>14</td>
      <td>6</td>
      <td>NaN</td>
      <td>0.0</td>
      <td>7.0</td>
      <td>Snow</td>
      <td>2</td>
    </tr>
    <tr>
      <th>5</th>
      <td>1997-1-6</td>
      <td>7.0</td>
      <td>3.0</td>
      <td>1.0</td>
      <td>2.0</td>
      <td>-1.0</td>
      <td>-3.0</td>
      <td>100.0</td>
      <td>82.0</td>
      <td>57.0</td>
      <td>1014</td>
      <td>1010</td>
      <td>1008</td>
      <td>10.0</td>
      <td>10.0</td>
      <td>10.0</td>
      <td>11</td>
      <td>5</td>
      <td>NaN</td>
      <td>0.0</td>
      <td>4.0</td>
      <td>NaN</td>
      <td>64</td>
    </tr>
    <tr>
      <th>6</th>
      <td>1997-1-7</td>
      <td>2.0</td>
      <td>0.0</td>
      <td>-2.0</td>
      <td>1.0</td>
      <td>-1.0</td>
      <td>-3.0</td>
      <td>100.0</td>
      <td>93.0</td>
      <td>75.0</td>
      <td>1016</td>
      <td>1014</td>
      <td>1009</td>
      <td>10.0</td>
      <td>7.0</td>
      <td>0.0</td>
      <td>6</td>
      <td>2</td>
      <td>NaN</td>
      <td>0.0</td>
      <td>7.0</td>
      <td>Snow</td>
      <td>43</td>
    </tr>
    <tr>
      <th>7</th>
      <td>1997-1-8</td>
      <td>8.0</td>
      <td>4.0</td>
      <td>1.0</td>
      <td>7.0</td>
      <td>4.0</td>
      <td>1.0</td>
      <td>100.0</td>
      <td>96.0</td>
      <td>87.0</td>
      <td>1015</td>
      <td>1005</td>
      <td>1003</td>
      <td>10.0</td>
      <td>8.0</td>
      <td>4.0</td>
      <td>26</td>
      <td>8</td>
      <td>NaN</td>
      <td>0.0</td>
      <td>7.0</td>
      <td>Rain</td>
      <td>273</td>
    </tr>
  </tbody>
</table>
</div>

<p>When looking at the top five rows, you probably noticed that the inputs in the <code class="highlighter-rouge">Events</code> column are repetitive,
which means that it is probably a categorical attribute. So we can find out what categories exist and how many weather events belong to each category by using the value_counts() method:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df1</span><span class="p">[</span><span class="s">' Events'</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Rain                      1140
Rain-Thunderstorm          247
Fog                        233
Fog-Rain                    69
Thunderstorm                45
Rain-Snow                   33
Snow                        14
Rain-Hail-Thunderstorm       7
Fog-Snow                     4
Fog-Rain-Thunderstorm        1
Tornado                      1
Rain-Hail                    1
Fog-Thunderstorm             1
Rain-Snow-Thunderstorm       1
Fog-Rain-Snow                1
Name:  Events, dtype: int64
</code></pre></div></div>

<p>Basic statistics: Summary of each numerical attribute.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">display</span><span class="p">(</span><span class="n">df1</span><span class="o">.</span><span class="n">describe</span><span class="p">())</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Max TemperatureC</th>
      <th>Mean TemperatureC</th>
      <th>Min TemperatureC</th>
      <th>Dew PointC</th>
      <th>MeanDew PointC</th>
      <th>Min DewpointC</th>
      <th>Max Humidity</th>
      <th>Mean Humidity</th>
      <th>Min Humidity</th>
      <th>Max Sea Level PressurehPa</th>
      <th>Mean Sea Level PressurehPa</th>
      <th>Min Sea Level PressurehPa</th>
      <th>Max VisibilityKm</th>
      <th>Mean VisibilityKm</th>
      <th>Min VisibilitykM</th>
      <th>Max Wind SpeedKm/h</th>
      <th>Mean Wind SpeedKm/h</th>
      <th>Max Gust SpeedKm/h</th>
      <th>Precipitationmm</th>
      <th>CloudCover</th>
      <th>WindDirDegrees</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>count</th>
      <td>6810.000000</td>
      <td>6809.000000</td>
      <td>6810.000000</td>
      <td>6810.000000</td>
      <td>6810.000000</td>
      <td>6810.000000</td>
      <td>6810.000000</td>
      <td>6810.000000</td>
      <td>6810.000000</td>
      <td>6812.000000</td>
      <td>6812.000000</td>
      <td>6812.000000</td>
      <td>5872.000000</td>
      <td>5872.000000</td>
      <td>5872.000000</td>
      <td>6812.000000</td>
      <td>6812.000000</td>
      <td>3506.000000</td>
      <td>6812.000000</td>
      <td>5440.000000</td>
      <td>6812.000000</td>
    </tr>
    <tr>
      <th>mean</th>
      <td>21.039648</td>
      <td>14.658687</td>
      <td>8.640529</td>
      <td>8.120705</td>
      <td>4.976211</td>
      <td>1.451248</td>
      <td>81.139354</td>
      <td>57.971366</td>
      <td>34.729369</td>
      <td>1020.529360</td>
      <td>1017.973136</td>
      <td>1015.217410</td>
      <td>14.644074</td>
      <td>11.719857</td>
      <td>9.134877</td>
      <td>21.953171</td>
      <td>9.170728</td>
      <td>43.988306</td>
      <td>0.111182</td>
      <td>3.206066</td>
      <td>197.234586</td>
    </tr>
    <tr>
      <th>std</th>
      <td>8.867187</td>
      <td>7.580461</td>
      <td>6.837626</td>
      <td>4.741067</td>
      <td>4.654270</td>
      <td>4.909705</td>
      <td>17.531839</td>
      <td>19.675744</td>
      <td>19.320359</td>
      <td>6.235941</td>
      <td>6.480085</td>
      <td>6.944745</td>
      <td>8.770024</td>
      <td>5.592324</td>
      <td>5.075065</td>
      <td>9.903914</td>
      <td>5.110013</td>
      <td>12.252462</td>
      <td>0.967174</td>
      <td>1.808948</td>
      <td>119.872777</td>
    </tr>
    <tr>
      <th>min</th>
      <td>0.000000</td>
      <td>-3.000000</td>
      <td>-10.000000</td>
      <td>-12.000000</td>
      <td>-15.000000</td>
      <td>-22.000000</td>
      <td>16.000000</td>
      <td>15.000000</td>
      <td>4.000000</td>
      <td>994.000000</td>
      <td>986.000000</td>
      <td>965.000000</td>
      <td>1.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>19.000000</td>
      <td>0.000000</td>
      <td>0.000000</td>
      <td>-1.000000</td>
    </tr>
    <tr>
      <th>25%</th>
      <td>13.000000</td>
      <td>8.000000</td>
      <td>3.000000</td>
      <td>5.000000</td>
      <td>2.000000</td>
      <td>-2.000000</td>
      <td>68.000000</td>
      <td>41.000000</td>
      <td>19.000000</td>
      <td>1017.000000</td>
      <td>1014.000000</td>
      <td>1011.000000</td>
      <td>10.000000</td>
      <td>10.000000</td>
      <td>7.000000</td>
      <td>14.000000</td>
      <td>6.000000</td>
      <td>35.000000</td>
      <td>0.000000</td>
      <td>2.000000</td>
      <td>66.000000</td>
    </tr>
    <tr>
      <th>50%</th>
      <td>20.000000</td>
      <td>14.000000</td>
      <td>9.000000</td>
      <td>8.000000</td>
      <td>6.000000</td>
      <td>2.000000</td>
      <td>87.000000</td>
      <td>59.000000</td>
      <td>32.000000</td>
      <td>1020.000000</td>
      <td>1018.000000</td>
      <td>1015.000000</td>
      <td>10.000000</td>
      <td>10.000000</td>
      <td>10.000000</td>
      <td>21.000000</td>
      <td>8.000000</td>
      <td>42.000000</td>
      <td>0.000000</td>
      <td>3.000000</td>
      <td>223.000000</td>
    </tr>
    <tr>
      <th>75%</th>
      <td>29.000000</td>
      <td>21.000000</td>
      <td>14.000000</td>
      <td>12.000000</td>
      <td>8.000000</td>
      <td>5.000000</td>
      <td>94.000000</td>
      <td>74.000000</td>
      <td>47.750000</td>
      <td>1024.000000</td>
      <td>1022.000000</td>
      <td>1019.000000</td>
      <td>10.000000</td>
      <td>10.000000</td>
      <td>10.000000</td>
      <td>27.000000</td>
      <td>11.000000</td>
      <td>52.000000</td>
      <td>0.000000</td>
      <td>5.000000</td>
      <td>299.000000</td>
    </tr>
    <tr>
      <th>max</th>
      <td>41.000000</td>
      <td>32.000000</td>
      <td>28.000000</td>
      <td>20.000000</td>
      <td>16.000000</td>
      <td>14.000000</td>
      <td>100.000000</td>
      <td>100.000000</td>
      <td>100.000000</td>
      <td>1047.000000</td>
      <td>1043.000000</td>
      <td>1041.000000</td>
      <td>31.000000</td>
      <td>31.000000</td>
      <td>31.000000</td>
      <td>182.000000</td>
      <td>39.000000</td>
      <td>103.000000</td>
      <td>32.000000</td>
      <td>8.000000</td>
      <td>360.000000</td>
    </tr>
  </tbody>
</table>
</div>

<p>The count , mean , min , and max rows are self-explanatory.  Note that the null values are ignored (so, for example, count of <code class="highlighter-rouge">Max TemperatureC</code>is 6810, not 6812). The std row shows the standard deviation, which measures how dispersed the values are. The 25%, 50%, and 75% rows show the corresponding percentiles: a percentile indicates the value below which a given percentage of observations in a group of observations falls</p>

<h3 id="looking-for-correlations">Looking for Correlations:</h3>

<p>Since the dataset is not too large, you can easily compute the standard correlation coefficient (also called Pearsonâ€™s r) between every pair of attributes using the corr() method:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">corr_matrix</span> <span class="o">=</span> <span class="n">df1</span><span class="o">.</span><span class="n">corr</span><span class="p">()</span>

<span class="n">corr_matrix</span><span class="p">[</span><span class="s">"Max TemperatureC"</span><span class="p">]</span><span class="o">.</span><span class="n">sort_values</span><span class="p">(</span><span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Max TemperatureC               1.000000
Mean TemperatureC              0.970983
Min TemperatureC               0.856143
Dew PointC                     0.583509
MeanDew PointC                 0.495857
 Min VisibilitykM              0.388285
Min DewpointC                  0.329547
 Mean VisibilityKm             0.299083
 Max VisibilityKm              0.126435
 Max Wind SpeedKm/h            0.025244
WindDirDegrees                 0.000365
 Mean Sea Level PressurehPa   -0.011203
 Min Sea Level PressurehPa    -0.042676
Precipitationmm               -0.068196
 Mean Wind SpeedKm/h          -0.073119
 Max Sea Level PressurehPa    -0.081856
 Max Gust SpeedKm/h           -0.135634
 CloudCover                   -0.449610
Max Humidity                  -0.718184
 Min Humidity                 -0.761490
 Mean Humidity                -0.805961
Name: Max TemperatureC, dtype: float64
</code></pre></div></div>

<p>The correlation coefficient ranges from â€“1 to 1. When it is close to 1, it means that there is a strong positive correlation.  When the coefficient is close to â€“1, it means that there is a strong negative correlation.  Finally, coefficients close to zero mean that there is no linear correlation</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
</code></pre></div></div>

<h2 id="exploratory-data-analysis">Exploratory Data Analysis</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df1</span><span class="p">[</span><span class="s">' Events'</span><span class="p">]</span><span class="o">.</span><span class="n">unique</span><span class="p">()</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([nan, 'Rain', 'Rain-Snow', 'Snow', 'Fog', 'Fog-Rain',
       'Rain-Thunderstorm', 'Thunderstorm', 'Rain-Hail-Thunderstorm',
       'Fog-Thunderstorm', 'Tornado', 'Fog-Rain-Thunderstorm',
       'Fog-Rain-Snow', 'Fog-Snow', 'Rain-Snow-Thunderstorm', 'Rain-Hail'],
      dtype=object)
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
</code></pre></div></div>

<h3 id="time-series--feature-engineering">Time Series &amp; Feature engineering:</h3>

<p>Letâ€™s convert date (<code class="highlighter-rouge">CET</code>) to datetime object so that we can easily extract some useful information from it, such as <code class="highlighter-rouge">time</code>, <code class="highlighter-rouge">day</code> of the week, and <code class="highlighter-rouge">month</code>.</p>

<p>Date:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">display</span><span class="p">(</span><span class="s">'Beginning date:'</span><span class="p">,</span> <span class="n">df1</span><span class="p">[</span><span class="s">'CET'</span><span class="p">][</span><span class="mi">0</span><span class="p">],</span> <span class="s">'End date:'</span><span class="p">,</span> <span class="n">df1</span><span class="p">[</span><span class="s">'CET'</span><span class="p">][</span><span class="o">-</span><span class="mi">1</span><span class="p">:])</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>'Beginning date:'



'1997-1-1'



'End date:'



6811    2015-12-31
Name: CET, dtype: object
</code></pre></div></div>

<p>Letâ€™s convert date (<code class="highlighter-rouge">CET</code>) to datetime object so that we can easily extract some useful information from it, such as day of the week, month and year.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df1</span><span class="p">[</span><span class="s">'CET'</span><span class="p">]</span> <span class="o">=</span> <span class="n">df1</span><span class="p">[</span><span class="s">'CET'</span><span class="p">]</span><span class="o">.</span><span class="nb">apply</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">)</span>

<span class="n">df1</span><span class="p">[</span><span class="s">'year'</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="n">i</span><span class="o">.</span><span class="n">year</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">df1</span><span class="p">[</span><span class="s">'CET'</span><span class="p">]]</span>
<span class="n">df1</span><span class="p">[</span><span class="s">'month'</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="n">i</span><span class="o">.</span><span class="n">month_name</span><span class="p">()[</span><span class="mi">0</span><span class="p">:</span><span class="mi">3</span><span class="p">]</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">df1</span><span class="p">[</span><span class="s">'CET'</span><span class="p">]]</span>
<span class="n">df1</span><span class="p">[</span><span class="s">'day'</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="n">i</span><span class="o">.</span><span class="n">day_name</span><span class="p">()[</span><span class="mi">0</span><span class="p">:</span><span class="mi">3</span><span class="p">]</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">df1</span><span class="p">[</span><span class="s">'CET'</span><span class="p">]]</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">date_property</span><span class="p">(</span><span class="n">df</span><span class="p">):</span>

    <span class="s">"extract all date properties from a datetime datatype by month, quarter, year, day and week"</span>

    <span class="n">df</span><span class="p">[</span><span class="s">'CET'</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">'CET'</span><span class="p">],</span> <span class="n">infer_datetime_format</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>


    <span class="n">df</span><span class="p">[</span><span class="s">"Month"</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">"CET"</span><span class="p">]</span><span class="o">.</span><span class="n">dt</span><span class="o">.</span><span class="n">month</span>
    <span class="n">df</span><span class="p">[</span><span class="s">"Quarter"</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">"CET"</span><span class="p">]</span><span class="o">.</span><span class="n">dt</span><span class="o">.</span><span class="n">quarter</span>
    <span class="n">df</span><span class="p">[</span><span class="s">"Year"</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">"CET"</span><span class="p">]</span><span class="o">.</span><span class="n">dt</span><span class="o">.</span><span class="n">year</span>
    <span class="n">df</span><span class="p">[</span><span class="s">"Day"</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">"CET"</span><span class="p">]</span><span class="o">.</span><span class="n">dt</span><span class="o">.</span><span class="n">day</span>
    <span class="n">df</span><span class="p">[</span><span class="s">"Week"</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">"CET"</span><span class="p">]</span><span class="o">.</span><span class="n">dt</span><span class="o">.</span><span class="n">week</span>


    <span class="n">df</span><span class="p">[</span><span class="s">"Season"</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"Month"</span><span class="p">]</span><span class="o">.</span><span class="n">isin</span><span class="p">([</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">]),</span><span class="s">"Autumn"</span><span class="p">,</span>
                <span class="n">np</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"Month"</span><span class="p">]</span><span class="o">.</span><span class="n">isin</span><span class="p">([</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">]),</span> <span class="s">"Winter"</span><span class="p">,</span>
                <span class="n">np</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"Month"</span><span class="p">]</span><span class="o">.</span><span class="n">isin</span><span class="p">([</span><span class="mi">9</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">11</span><span class="p">]),</span><span class="s">"Spring"</span><span class="p">,</span>
                <span class="n">np</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">"Month"</span><span class="p">]</span><span class="o">.</span><span class="n">isin</span><span class="p">([</span><span class="mi">12</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">]),</span> <span class="s">"Summer"</span><span class="p">,</span><span class="s">"None"</span><span class="p">))))</span>

    <span class="n">df_1</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">copy</span><span class="p">()</span>


    <span class="s">'''mapping months from jan -&gt; Aug'''</span>

    <span class="n">df_1</span><span class="o">.</span><span class="n">Month</span> <span class="o">=</span> <span class="n">df_1</span><span class="o">.</span><span class="n">Month</span><span class="o">.</span><span class="nb">map</span><span class="p">({</span><span class="mi">1</span><span class="p">:</span><span class="s">'January'</span><span class="p">,</span> <span class="mi">2</span><span class="p">:</span><span class="s">'February'</span><span class="p">,</span> <span class="mi">3</span><span class="p">:</span><span class="s">'March'</span><span class="p">,</span> <span class="mi">4</span><span class="p">:</span><span class="s">'April'</span><span class="p">,</span> <span class="mi">5</span><span class="p">:</span><span class="s">'May'</span><span class="p">,</span> <span class="mi">6</span><span class="p">:</span><span class="s">'June'</span><span class="p">,</span>
                                 <span class="mi">7</span><span class="p">:</span><span class="s">'July'</span><span class="p">,</span> <span class="mi">8</span><span class="p">:</span><span class="s">'August'</span><span class="p">,</span> <span class="mi">9</span><span class="p">:</span><span class="s">'September'</span><span class="p">,</span> <span class="mi">10</span><span class="p">:</span><span class="s">'October'</span><span class="p">,</span> <span class="mi">11</span><span class="p">:</span><span class="s">'November'</span><span class="p">,</span> <span class="mi">12</span><span class="p">:</span><span class="s">'December'</span><span class="p">})</span>
    <span class="n">df_1</span><span class="o">.</span><span class="n">Month</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Categorical</span><span class="p">(</span><span class="n">df_1</span><span class="o">.</span><span class="n">Month</span><span class="p">,</span> <span class="p">[</span><span class="s">'January'</span><span class="p">,</span> <span class="s">'February'</span><span class="p">,</span> <span class="s">'March'</span><span class="p">,</span> <span class="s">'April'</span><span class="p">,</span> <span class="s">'May'</span><span class="p">,</span> <span class="s">'June'</span><span class="p">,</span>
                                             <span class="s">'July'</span><span class="p">,</span> <span class="s">'August'</span><span class="p">,</span> <span class="s">'September'</span><span class="p">,</span> <span class="s">'October'</span><span class="p">,</span> <span class="s">'November'</span><span class="p">,</span> <span class="s">'December'</span><span class="p">])</span>

    <span class="s">'''extracting days of the week'''</span>

    <span class="n">df_1</span><span class="o">.</span><span class="n">Day</span> <span class="o">=</span> <span class="p">[</span><span class="n">j</span><span class="o">.</span><span class="n">day_name</span><span class="p">()[</span><span class="mi">0</span><span class="p">:</span><span class="mi">3</span><span class="p">]</span> <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="n">df_1</span><span class="p">[</span><span class="s">'CET'</span><span class="p">]]</span>
    <span class="n">df_1</span><span class="o">.</span><span class="n">Day</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Categorical</span><span class="p">(</span><span class="n">df_1</span><span class="o">.</span><span class="n">Day</span><span class="p">,</span> <span class="p">[</span><span class="s">'Mon'</span><span class="p">,</span> <span class="s">'Tue'</span><span class="p">,</span> <span class="s">'Wed'</span><span class="p">,</span> <span class="s">'Thu'</span><span class="p">,</span> <span class="s">'Fri'</span><span class="p">,</span> <span class="s">'Sat'</span><span class="p">,</span> <span class="s">'Sun'</span><span class="p">])</span>



    <span class="k">return</span> <span class="n">df</span><span class="p">,</span> <span class="n">df_1</span>





</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">train_data</span> <span class="o">=</span> <span class="n">date_property</span><span class="p">(</span><span class="n">df1</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span>


<span class="k">print</span><span class="p">(</span><span class="s">'</span><span class="se">\n</span><span class="s">----------------------Train set------------------'</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">train_data</span><span class="p">[[</span><span class="s">"CET"</span><span class="p">,</span><span class="s">"Year"</span><span class="p">,</span><span class="s">"Month"</span><span class="p">,</span><span class="s">"Day"</span><span class="p">,</span><span class="s">"Week"</span><span class="p">,</span><span class="s">"Quarter"</span><span class="p">,</span><span class="s">"Season"</span><span class="p">]]</span><span class="o">.</span><span class="n">sample</span><span class="p">(</span><span class="mi">15</span><span class="p">))</span>

</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>----------------------Train set------------------
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>CET</th>
      <th>Year</th>
      <th>Month</th>
      <th>Day</th>
      <th>Week</th>
      <th>Quarter</th>
      <th>Season</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>3622</th>
      <td>2007-04-08</td>
      <td>2007</td>
      <td>April</td>
      <td>Sun</td>
      <td>14</td>
      <td>2</td>
      <td>Autumn</td>
    </tr>
    <tr>
      <th>3401</th>
      <td>2006-08-30</td>
      <td>2006</td>
      <td>August</td>
      <td>Wed</td>
      <td>35</td>
      <td>3</td>
      <td>Winter</td>
    </tr>
    <tr>
      <th>588</th>
      <td>1998-08-12</td>
      <td>1998</td>
      <td>August</td>
      <td>Wed</td>
      <td>33</td>
      <td>3</td>
      <td>Winter</td>
    </tr>
    <tr>
      <th>3281</th>
      <td>2006-05-02</td>
      <td>2006</td>
      <td>May</td>
      <td>Tue</td>
      <td>18</td>
      <td>2</td>
      <td>Autumn</td>
    </tr>
    <tr>
      <th>6051</th>
      <td>2013-12-01</td>
      <td>2013</td>
      <td>December</td>
      <td>Sun</td>
      <td>48</td>
      <td>4</td>
      <td>Summer</td>
    </tr>
    <tr>
      <th>4607</th>
      <td>2009-12-18</td>
      <td>2009</td>
      <td>December</td>
      <td>Fri</td>
      <td>51</td>
      <td>4</td>
      <td>Summer</td>
    </tr>
    <tr>
      <th>2183</th>
      <td>2003-03-31</td>
      <td>2003</td>
      <td>March</td>
      <td>Mon</td>
      <td>14</td>
      <td>1</td>
      <td>Autumn</td>
    </tr>
    <tr>
      <th>3789</th>
      <td>2007-09-22</td>
      <td>2007</td>
      <td>September</td>
      <td>Sat</td>
      <td>38</td>
      <td>3</td>
      <td>Spring</td>
    </tr>
    <tr>
      <th>4752</th>
      <td>2010-05-12</td>
      <td>2010</td>
      <td>May</td>
      <td>Wed</td>
      <td>19</td>
      <td>2</td>
      <td>Autumn</td>
    </tr>
    <tr>
      <th>5689</th>
      <td>2012-12-04</td>
      <td>2012</td>
      <td>December</td>
      <td>Tue</td>
      <td>49</td>
      <td>4</td>
      <td>Summer</td>
    </tr>
    <tr>
      <th>4388</th>
      <td>2009-05-13</td>
      <td>2009</td>
      <td>May</td>
      <td>Wed</td>
      <td>20</td>
      <td>2</td>
      <td>Autumn</td>
    </tr>
    <tr>
      <th>6248</th>
      <td>2014-06-16</td>
      <td>2014</td>
      <td>June</td>
      <td>Mon</td>
      <td>25</td>
      <td>2</td>
      <td>Winter</td>
    </tr>
    <tr>
      <th>1423</th>
      <td>2001-03-01</td>
      <td>2001</td>
      <td>March</td>
      <td>Thu</td>
      <td>9</td>
      <td>1</td>
      <td>Autumn</td>
    </tr>
    <tr>
      <th>4501</th>
      <td>2009-09-03</td>
      <td>2009</td>
      <td>September</td>
      <td>Thu</td>
      <td>36</td>
      <td>3</td>
      <td>Spring</td>
    </tr>
    <tr>
      <th>3865</th>
      <td>2007-12-07</td>
      <td>2007</td>
      <td>December</td>
      <td>Fri</td>
      <td>49</td>
      <td>4</td>
      <td>Summer</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span> <span class="o">=</span> <span class="p">(</span><span class="mi">14</span><span class="p">,</span> <span class="mi">6</span><span class="p">))</span>
<span class="n">sns</span><span class="o">.</span><span class="n">countplot</span><span class="p">(</span><span class="n">x</span> <span class="o">=</span> <span class="s">'Season'</span><span class="p">,</span> <span class="n">hue</span> <span class="o">=</span> <span class="s">' Events'</span><span class="p">,</span> <span class="n">data</span> <span class="o">=</span> <span class="n">train_data</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">legend</span><span class="p">(</span><span class="n">loc</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">'Season'</span><span class="p">,</span> <span class="n">size</span> <span class="o">=</span> <span class="mi">15</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">'Count'</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">15</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">tight_layout</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="https://drive.google.com/uc?export=view&amp;id=1kF9x4SE2_JZIwSmlA4h8uRvxhMFDHkfb" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span> <span class="o">=</span> <span class="p">(</span><span class="mi">15</span><span class="p">,</span> <span class="mi">6</span><span class="p">))</span>
<span class="n">sns</span><span class="o">.</span><span class="n">countplot</span><span class="p">(</span><span class="n">x</span> <span class="o">=</span> <span class="s">'Month'</span><span class="p">,</span> <span class="n">hue</span> <span class="o">=</span> <span class="s">' Events'</span><span class="p">,</span> <span class="n">data</span> <span class="o">=</span> <span class="n">train_data</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">'Month'</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">15</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">'Count'</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">15</span><span class="p">)</span>
<span class="c1">#plt.tick_params(axis='x', labelsize=12, width=2, length = 4)
#plt.tick_params(axis='y', labelsize=12, width=2, length = 4)
</span><span class="n">plt</span><span class="o">.</span><span class="n">tight_layout</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="https://drive.google.com/uc?export=view&amp;id=1V8gHuPBrm1Al9Q6eAiCCntOdG7TDcEpM" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span> <span class="o">=</span> <span class="p">(</span><span class="mi">12</span><span class="p">,</span> <span class="mi">6</span><span class="p">))</span>
<span class="n">sns</span><span class="o">.</span><span class="n">countplot</span><span class="p">(</span><span class="n">x</span> <span class="o">=</span> <span class="s">'Day'</span><span class="p">,</span> <span class="n">hue</span> <span class="o">=</span> <span class="s">' Events'</span><span class="p">,</span> <span class="n">data</span> <span class="o">=</span> <span class="n">train_data</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">'Day'</span><span class="p">,</span> <span class="n">size</span> <span class="o">=</span> <span class="mi">15</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">'Count'</span><span class="p">,</span> <span class="n">size</span> <span class="o">=</span> <span class="mi">15</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">tight_layout</span><span class="p">()</span>

</code></pre></div></div>

<p><img src="https://drive.google.com/uc?export=view&amp;id=1AenjnIdIXuABNDi84vtmguUf6B4mBSsO" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span><span class="mi">7</span><span class="p">))</span>
<span class="n">sns</span><span class="o">.</span><span class="n">countplot</span><span class="p">(</span><span class="n">x</span> <span class="o">=</span> <span class="s">'Quarter'</span><span class="p">,</span> <span class="n">hue</span> <span class="o">=</span> <span class="s">' Events'</span><span class="p">,</span> <span class="n">data</span> <span class="o">=</span> <span class="n">train_data</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">'Quarter'</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">15</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">'Event'</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">15</span><span class="p">)</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Text(0, 0.5, 'Event')
</code></pre></div></div>

<p><img src="https://drive.google.com/uc?export=view&amp;id=1waxYFhEjbvh1PtGFQFGPcrh-H1Oe_j_J" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span><span class="mi">6</span><span class="p">))</span>
<span class="n">sns</span><span class="o">.</span><span class="n">countplot</span><span class="p">(</span><span class="n">data</span> <span class="o">=</span> <span class="n">df1</span><span class="p">,</span> <span class="n">x</span> <span class="o">=</span> <span class="s">'year'</span><span class="p">,</span> <span class="n">hue</span> <span class="o">=</span> <span class="s">' Events'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">'Year'</span><span class="p">,</span> <span class="n">size</span> <span class="o">=</span> <span class="mi">15</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">'Count'</span><span class="p">,</span> <span class="n">size</span> <span class="o">=</span> <span class="mi">15</span><span class="p">)</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Text(0, 0.5, 'Count')
</code></pre></div></div>

<p><img src="https://drive.google.com/uc?export=view&amp;id=1mSAUz6TgbHU04e-Eas15PiMN6wY0uTiC" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
</code></pre></div></div>

<p>A histogram for each numerical attribute:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df1</span><span class="o">.</span><span class="n">hist</span><span class="p">(</span><span class="n">bins</span><span class="o">=</span><span class="mi">50</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">20</span><span class="p">,</span><span class="mi">15</span><span class="p">))</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="https://drive.google.com/uc?export=view&amp;id=1ftsiIGBBDQf5GeJFoc1OjH9EiaR0xKck" alt="png" /></p>

<p>Bar plot for categorical attribute:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span> <span class="o">=</span> <span class="p">(</span><span class="mi">14</span><span class="p">,</span><span class="mi">7</span><span class="p">))</span>

<span class="n">plt</span><span class="o">.</span><span class="n">subplot</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
<span class="n">df1</span><span class="p">[</span><span class="s">' Events'</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">kind</span> <span class="o">=</span> <span class="s">'bar'</span><span class="p">,</span> <span class="n">title</span> <span class="o">=</span> <span class="s">'Weather event'</span><span class="p">,</span> <span class="n">rot</span> <span class="o">=</span> <span class="mi">90</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">subplot</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
<span class="n">df1</span><span class="p">[</span><span class="s">' Events'</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">kind</span> <span class="o">=</span> <span class="s">'pie'</span><span class="p">,</span>
                                 <span class="n">autopct</span><span class="o">=</span><span class="s">'</span><span class="si">%1.2</span><span class="s">f</span><span class="si">%%</span><span class="s">'</span><span class="p">,</span>
                                 <span class="n">shadow</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
                                 <span class="n">title</span> <span class="o">=</span> <span class="s">'Weather event'</span><span class="p">,</span> <span class="n">labels</span> <span class="o">=</span> <span class="bp">None</span><span class="p">,</span> <span class="n">legend</span> <span class="o">=</span> <span class="s">'bbox_to_anchor=(1.5, 2)'</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">tight_layout</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="https://drive.google.com/uc?export=view&amp;id=1sxu3-MKwHALbMibj8YRzE6e7xdFWcwPF" alt="png" /></p>

<ul>
  <li>Madrid has on average only ~ 63.4 % precipitation from 1997 - 2015</li>
</ul>

<p>Imputing nan values:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">display</span><span class="p">(</span><span class="n">df1</span><span class="o">.</span><span class="n">isnull</span><span class="p">()</span><span class="o">.</span><span class="nb">sum</span><span class="p">())</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>CET                               0
Max TemperatureC                  2
Mean TemperatureC                 3
Min TemperatureC                  2
Dew PointC                        2
MeanDew PointC                    2
Min DewpointC                     2
Max Humidity                      2
 Mean Humidity                    2
 Min Humidity                     2
 Max Sea Level PressurehPa        0
 Mean Sea Level PressurehPa       0
 Min Sea Level PressurehPa        0
 Max VisibilityKm               940
 Mean VisibilityKm              940
 Min VisibilitykM               940
 Max Wind SpeedKm/h               0
 Mean Wind SpeedKm/h              0
 Max Gust SpeedKm/h            3306
Precipitationmm                   0
 CloudCover                    1372
 Events                        5014
WindDirDegrees                    0
year                              0
month                             0
day                               0
Month                             0
Quarter                           0
Year                              0
Day                               0
Week                              0
Season                            0
dtype: int64
</code></pre></div></div>

<h4 id="recall-the-prime-goal-is-to-use-minimum-temperature-to-predict-maximum-temperature-in-barajas-airport---madrid">Recall, the prime goal is to use minimum temperature to predict maximum temperature in Barajas Airport - Madrid</h4>

<p>We shall replace nan values with the median of the column for both features:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">display</span><span class="p">(</span><span class="n">df1</span><span class="p">[[</span><span class="s">"Min TemperatureC"</span><span class="p">,</span><span class="s">"Max TemperatureC"</span><span class="p">]]</span><span class="o">.</span><span class="n">head</span><span class="p">())</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Min TemperatureC</th>
      <th>Max TemperatureC</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>2.0</td>
      <td>7.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>0.0</td>
      <td>7.0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>2.0</td>
      <td>5.0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>-1.0</td>
      <td>7.0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>-1.0</td>
      <td>2.0</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">display</span><span class="p">(</span><span class="n">df1</span><span class="p">[[</span><span class="s">"Min TemperatureC"</span><span class="p">,</span><span class="s">"Max TemperatureC"</span><span class="p">]]</span><span class="o">.</span><span class="n">isnull</span><span class="p">()</span><span class="o">.</span><span class="nb">sum</span><span class="p">())</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Min TemperatureC    2
Max TemperatureC    2
dtype: int64
</code></pre></div></div>

<p>We see that <code class="highlighter-rouge">Min TemperatureC</code> and <code class="highlighter-rouge">Max TemperatureC</code> in the dataset have 2 null values, respectively.  So we can relace null values by the median of the column</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">x</span> <span class="o">=</span> <span class="p">(</span><span class="n">df1</span><span class="p">[</span><span class="s">"Min TemperatureC"</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="n">df1</span><span class="p">[</span><span class="s">"Min TemperatureC"</span><span class="p">]</span><span class="o">.</span><span class="n">median</span><span class="p">()))</span>

<span class="n">y</span> <span class="o">=</span> <span class="p">(</span><span class="n">df1</span><span class="p">[</span><span class="s">"Max TemperatureC"</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="n">df1</span><span class="p">[</span><span class="s">"Max TemperatureC"</span><span class="p">]</span><span class="o">.</span><span class="n">median</span><span class="p">()))</span>

<span class="k">print</span><span class="p">(</span><span class="n">x</span><span class="o">.</span><span class="n">shape</span><span class="p">,</span> <span class="n">y</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(6812,) (6812,)
</code></pre></div></div>

<p>Letâ€™s make some plots:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">6</span><span class="p">))</span>
<span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="s">'.k'</span> <span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s">"MaxTemp vs MinTemp"</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">"MinTemp"</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">"MaxTemp"</span><span class="p">)</span>


</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Text(0, 0.5, 'MaxTemp')
</code></pre></div></div>

<p><img src="https://drive.google.com/uc?export=view&amp;id=1cgPBlIdSoS7ogsf_lHOl1nUCl8D3GD2W" alt="png" /></p>

<p>Note: Looking at the figure above, it appears that there is some sort of linear relationship between minimum and maximum temperature.</p>

<p>Letâ€™s try to inspect the average maximum temperature:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">6</span><span class="p">))</span>
<span class="n">sns</span><span class="o">.</span><span class="n">distplot</span><span class="p">(</span><span class="n">y</span><span class="p">)</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7fb43f253b70&gt;
</code></pre></div></div>

<p><img src="https://drive.google.com/uc?export=view&amp;id=1qQYP3liYP3i147ywRqkM4OVTmz5xt4GB" alt="png" /></p>

<h2 id="data-splicing">Data Splicing</h2>

<p>We are going to split the data into two sets -  80$\%$ train set and 20$\%$ test set.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">sklearn.model_selection</span> <span class="kn">import</span> <span class="n">train_test_split</span>

<span class="c1">#transform from row vector to column vector
</span><span class="n">xx</span> <span class="o">=</span> <span class="n">x</span><span class="p">[:,</span> <span class="n">np</span><span class="o">.</span><span class="n">newaxis</span><span class="p">]</span>
<span class="n">yy</span> <span class="o">=</span> <span class="n">y</span><span class="p">[:,</span> <span class="n">np</span><span class="o">.</span><span class="n">newaxis</span><span class="p">]</span>

<span class="c1">#splicing
</span><span class="n">x_train</span><span class="p">,</span> <span class="n">x_test</span><span class="p">,</span> <span class="n">y_train</span><span class="p">,</span> <span class="n">y_test</span> <span class="o">=</span> <span class="n">train_test_split</span><span class="p">(</span><span class="n">xx</span><span class="p">,</span> <span class="n">yy</span><span class="p">,</span> <span class="n">test_size</span> <span class="o">=</span> <span class="mf">0.2</span><span class="p">,</span> <span class="n">random_state</span> <span class="o">=</span> <span class="mi">42</span><span class="p">)</span>

</code></pre></div></div>

<p>Letâ€™s check the dimensions of all sets:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">y_train</span><span class="o">.</span><span class="n">shape</span><span class="p">,</span> <span class="n">y_test</span><span class="o">.</span><span class="n">shape</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>((5449, 1), (1363, 1))
</code></pre></div></div>

<h2 id="machine-learning-model">Machine Learning model</h2>

<p>This is the part where the classifier will be instantiate and trained.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">sklearn</span> <span class="kn">import</span> <span class="n">metrics</span>
<span class="kn">from</span> <span class="nn">sklearn.linear_model</span> <span class="kn">import</span> <span class="n">LinearRegression</span>

<span class="c1">#training the algorithm
</span><span class="n">LR</span> <span class="o">=</span> <span class="n">LinearRegression</span><span class="p">(</span><span class="n">normalize</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span><span class="o">.</span><span class="n">fit</span><span class="p">(</span><span class="n">x_train</span><span class="p">,</span> <span class="n">y_train</span><span class="p">)</span>

<span class="c1">#To retrieve the intercept
</span><span class="k">print</span><span class="p">(</span><span class="s">"intercept :"</span><span class="p">,</span> <span class="n">LR</span><span class="o">.</span><span class="n">intercept_</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"coefficient :"</span><span class="p">,</span> <span class="n">LR</span><span class="o">.</span><span class="n">coef_</span><span class="p">)</span>

</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>intercept : [11.53244273]
coefficient : [[1.1037861]]
</code></pre></div></div>

<h1 id="prediction">Prediction:</h1>

<p>Letâ€™s make prediction to see how accurately the algorithm predict the percentage score</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">y_pred</span> <span class="o">=</span> <span class="n">LR</span><span class="o">.</span><span class="n">predict</span><span class="p">(</span><span class="n">x_test</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="model-evaluation">Model evaluation</h2>

<p>Select a Performance Measure:</p>

<p>A typical performance measure for regression problems is the <code class="highlighter-rouge">Mean Absolute Error</code>, <code class="highlighter-rouge">Mean Squared Error</code>, <code class="highlighter-rouge">Root Mean Square Error (RMSE)</code>. It gives an idea of how much error the system typically makes in its predictions.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="s">"Mean Absolute Error:"</span><span class="p">,</span> <span class="n">metrics</span><span class="o">.</span><span class="n">mean_absolute_error</span><span class="p">(</span><span class="n">y_test</span><span class="p">,</span> <span class="n">y_pred</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Mean Squared Error:"</span><span class="p">,</span> <span class="n">metrics</span><span class="o">.</span><span class="n">mean_squared_error</span><span class="p">(</span><span class="n">y_test</span><span class="p">,</span> <span class="n">y_pred</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Root Mean Square Error:"</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">metrics</span><span class="o">.</span><span class="n">mean_squared_error</span><span class="p">(</span><span class="n">y_test</span><span class="p">,</span> <span class="n">y_pred</span><span class="p">)))</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Mean Absolute Error: 3.962475426159121
Mean Squared Error: 21.49057920091619
Root Mean Square Error: 4.635793265549726
</code></pre></div></div>

<p>creating new dataframe consist of actual and predicted values:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">({</span><span class="s">"Actual"</span><span class="p">:</span> <span class="n">y_test</span><span class="o">.</span><span class="n">flatten</span><span class="p">(),</span> <span class="s">"Predicted"</span><span class="p">:</span> <span class="n">y_pred</span><span class="o">.</span><span class="n">flatten</span><span class="p">()})</span>

<span class="k">print</span><span class="p">(</span><span class="s">'</span><span class="se">\n</span><span class="s"> --------------------Let us view few rows in new dataframe------------------'</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">df2</span><span class="o">.</span><span class="n">head</span><span class="p">())</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code> --------------------Let us view few rows in new dataframe------------------
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Actual</th>
      <th>Predicted</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>32.0</td>
      <td>30.296806</td>
    </tr>
    <tr>
      <th>1</th>
      <td>32.0</td>
      <td>28.089234</td>
    </tr>
    <tr>
      <th>2</th>
      <td>8.0</td>
      <td>14.843801</td>
    </tr>
    <tr>
      <th>3</th>
      <td>16.0</td>
      <td>20.362732</td>
    </tr>
    <tr>
      <th>4</th>
      <td>15.0</td>
      <td>14.843801</td>
    </tr>
  </tbody>
</table>
</div>

<p>Letâ€™s view few actual and predicted values:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df2</span> <span class="o">=</span> <span class="n">df2</span><span class="o">.</span><span class="n">head</span><span class="p">(</span><span class="mi">15</span><span class="p">)</span>
<span class="n">df2</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">kind</span> <span class="o">=</span> <span class="s">'bar'</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">6</span><span class="p">))</span>
<span class="n">plt</span><span class="o">.</span><span class="n">grid</span><span class="p">(</span><span class="n">which</span> <span class="o">=</span> <span class="s">'major'</span><span class="p">,</span> <span class="n">linestyle</span> <span class="o">=</span> <span class="s">'-'</span><span class="p">,</span> <span class="n">linewidth</span> <span class="o">=</span> <span class="s">'0.5'</span><span class="p">,</span> <span class="n">color</span> <span class="o">=</span> <span class="s">'green'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s">'Comparison of Predicted and Actual values'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">'Variables'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">'Values'</span><span class="p">)</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Text(0, 0.5, 'Values')
</code></pre></div></div>

<p><img src="https://drive.google.com/uc?export=view&amp;id=1f4YiIZS5hlJpyrZNeZa0cJaS_5R4RpLI" alt="png" /></p>

<p>Letâ€™s view our linear model</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">6</span><span class="p">))</span>
<span class="n">plt</span><span class="o">.</span><span class="n">scatter</span><span class="p">(</span><span class="n">x_test</span><span class="p">,</span> <span class="n">y_test</span><span class="p">,</span> <span class="n">color</span> <span class="o">=</span> <span class="s">'gray'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">x_test</span><span class="p">,</span> <span class="n">y_pred</span><span class="p">,</span> <span class="n">color</span> <span class="o">=</span> <span class="s">'red'</span><span class="p">,</span> <span class="n">linewidth</span> <span class="o">=</span> <span class="mi">2</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">"MinTemp"</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">"PredTemp"</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">tight_layout</span><span class="p">()</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="https://drive.google.com/uc?export=view&amp;id=1SN0jqMT11REItWqx6vZOYTChaJTLfrDU" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
</code></pre></div></div>
:ET