I"%ù+<script type="math/tex; mode=display">\mathrm{\textbf{Credit Risk}}</script>

<p>For organisation that pride themselves in their effective use of credit risk models to deliver profitable and high-impact loan alternative. I shall layout, as a data scientist, an approach that could be based on two main risk drivers of loan default prediction:. 1) willingness to pay and 2) ability to pay. I shall demonstrate how to build robust models to effectively predict the odds of repayment.</p>

<p>In this task, it is my objective to predict if a loan is good or bad, i.e. accurately predict binary outcome variable, where Good is 1 and Bad is 0.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">IPython.display</span> <span class="kn">import</span> <span class="n">display</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">import</span> <span class="nn">seaborn</span> <span class="k">as</span> <span class="n">sns</span>
<span class="kn">import</span> <span class="nn">pandas_profiling</span>
<span class="n">sns</span><span class="o">.</span><span class="nb">set</span><span class="p">(</span><span class="s">'notebook'</span><span class="p">)</span>

</code></pre></div></div>

<h2 id="dataset">Dataset:</h2>

<p>We are using data from <a href="https://zindi.africa/competitions/data-science-nigeria-challenge-1-loan-default-prediction/data">zindi</a>. For more information about datasets, the reader is  referred to <a href="https://zindi.africa/competitions/data-science-nigeria-challenge-1-loan-default-prediction/data">info</a>. The objective in this work is to create a binary classification model that predicts whether or not an individual is a good payer or not based on several indicators. The target variable is given as <code class="highlighter-rouge">good_bad_flag</code> and takes on a value of 1 if the client is  a good payer and 0 otherwise.</p>

<p>We will do some data exploratory data analysis, and then focus on learning a model. The second step will involve merging datasets and then impute the missing values. We will then split the dataset into a training and testing set randomly.  Then, we simply predict the most common class in the training set for all observations in the validation set.</p>

<p>Read data:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">train_demo</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">'traindemographics.csv'</span><span class="p">)</span>
<span class="n">train_perf</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">'trainperf.csv'</span><span class="p">)</span>
<span class="n">train_prev</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">'trainprevloans.zip'</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s">'zip'</span><span class="p">)</span>

</code></pre></div></div>

<p>To avoid data corruption, we shall make copy of all three sets:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">train_demo1</span> <span class="o">=</span> <span class="n">train_demo</span><span class="o">.</span><span class="n">copy</span><span class="p">()</span>
<span class="n">train_perf1</span> <span class="o">=</span> <span class="n">train_perf</span><span class="o">.</span><span class="n">copy</span><span class="p">()</span>
<span class="n">train_prev1</span> <span class="o">=</span> <span class="n">train_prev</span><span class="o">.</span><span class="n">copy</span><span class="p">()</span>
</code></pre></div></div>

<h3 id="lets-consider-each-dataset">Letâ€™s consider each dataset:</h3>

<h3 id="1-train-demographics-dataset">1. Train demographics dataset</h3>

<p>Take a Quick Look at the Data Structure. Letâ€™s take a look at the top five rows using the DataFrameâ€™s head() method</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\033</span><span class="s">[1m"</span><span class="o">+</span><span class="s">'Train demographics dataset:'</span><span class="o">+</span><span class="s">"</span><span class="se">\033</span><span class="s">[10m"</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">train_demo1</span><span class="o">.</span><span class="n">head</span><span class="p">(</span><span class="mi">5</span><span class="p">))</span>

<span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\033</span><span class="s">[1m"</span><span class="o">+</span><span class="s">'Train performance dataset:'</span><span class="o">+</span><span class="s">"</span><span class="se">\033</span><span class="s">[10m"</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">train_perf1</span><span class="o">.</span><span class="n">head</span><span class="p">(</span><span class="mi">5</span><span class="p">))</span>

<span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\033</span><span class="s">[1m"</span><span class="o">+</span><span class="s">'Train performance dataset:'</span><span class="o">+</span><span class="s">"</span><span class="se">\033</span><span class="s">[10m"</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">train_prev1</span><span class="o">.</span><span class="n">head</span><span class="p">(</span><span class="mi">5</span><span class="p">))</span>


</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Train demographics dataset:
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>customerid</th>
      <th>birthdate</th>
      <th>bank_account_type</th>
      <th>longitude_gps</th>
      <th>latitude_gps</th>
      <th>bank_name_clients</th>
      <th>bank_branch_clients</th>
      <th>employment_status_clients</th>
      <th>level_of_education_clients</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>8a858e135cb22031015cbafc76964ebd</td>
      <td>1973-10-10 00:00:00.000000</td>
      <td>Savings</td>
      <td>3.319219</td>
      <td>6.528604</td>
      <td>GT Bank</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>1</th>
      <td>8a858e275c7ea5ec015c82482d7c3996</td>
      <td>1986-01-21 00:00:00.000000</td>
      <td>Savings</td>
      <td>3.325598</td>
      <td>7.119403</td>
      <td>Sterling Bank</td>
      <td>NaN</td>
      <td>Permanent</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>2</th>
      <td>8a858e5b5bd99460015bdc95cd485634</td>
      <td>1987-04-01 00:00:00.000000</td>
      <td>Savings</td>
      <td>5.746100</td>
      <td>5.563174</td>
      <td>Fidelity Bank</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>3</th>
      <td>8a858efd5ca70688015cabd1f1e94b55</td>
      <td>1991-07-19 00:00:00.000000</td>
      <td>Savings</td>
      <td>3.362850</td>
      <td>6.642485</td>
      <td>GT Bank</td>
      <td>NaN</td>
      <td>Permanent</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>4</th>
      <td>8a858e785acd3412015acd48f4920d04</td>
      <td>1982-11-22 00:00:00.000000</td>
      <td>Savings</td>
      <td>8.455332</td>
      <td>11.971410</td>
      <td>GT Bank</td>
      <td>NaN</td>
      <td>Permanent</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>
</div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Train performance dataset:
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>customerid</th>
      <th>systemloanid</th>
      <th>loannumber</th>
      <th>approveddate</th>
      <th>creationdate</th>
      <th>loanamount</th>
      <th>totaldue</th>
      <th>termdays</th>
      <th>referredby</th>
      <th>good_bad_flag</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>8a2a81a74ce8c05d014cfb32a0da1049</td>
      <td>301994762</td>
      <td>12</td>
      <td>2017-07-25 08:22:56.000000</td>
      <td>2017-07-25 07:22:47.000000</td>
      <td>30000.0</td>
      <td>34500.0</td>
      <td>30</td>
      <td>NaN</td>
      <td>Good</td>
    </tr>
    <tr>
      <th>1</th>
      <td>8a85886e54beabf90154c0a29ae757c0</td>
      <td>301965204</td>
      <td>2</td>
      <td>2017-07-05 17:04:41.000000</td>
      <td>2017-07-05 16:04:18.000000</td>
      <td>15000.0</td>
      <td>17250.0</td>
      <td>30</td>
      <td>NaN</td>
      <td>Good</td>
    </tr>
    <tr>
      <th>2</th>
      <td>8a8588f35438fe12015444567666018e</td>
      <td>301966580</td>
      <td>7</td>
      <td>2017-07-06 14:52:57.000000</td>
      <td>2017-07-06 13:52:51.000000</td>
      <td>20000.0</td>
      <td>22250.0</td>
      <td>15</td>
      <td>NaN</td>
      <td>Good</td>
    </tr>
    <tr>
      <th>3</th>
      <td>8a85890754145ace015429211b513e16</td>
      <td>301999343</td>
      <td>3</td>
      <td>2017-07-27 19:00:41.000000</td>
      <td>2017-07-27 18:00:35.000000</td>
      <td>10000.0</td>
      <td>11500.0</td>
      <td>15</td>
      <td>NaN</td>
      <td>Good</td>
    </tr>
    <tr>
      <th>4</th>
      <td>8a858970548359cc0154883481981866</td>
      <td>301962360</td>
      <td>9</td>
      <td>2017-07-03 23:42:45.000000</td>
      <td>2017-07-03 22:42:39.000000</td>
      <td>40000.0</td>
      <td>44000.0</td>
      <td>30</td>
      <td>NaN</td>
      <td>Good</td>
    </tr>
  </tbody>
</table>
</div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Train performance dataset:
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>customerid</th>
      <th>systemloanid</th>
      <th>loannumber</th>
      <th>approveddate</th>
      <th>creationdate</th>
      <th>loanamount</th>
      <th>totaldue</th>
      <th>termdays</th>
      <th>closeddate</th>
      <th>referredby</th>
      <th>firstduedate</th>
      <th>firstrepaiddate</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>8a2a81a74ce8c05d014cfb32a0da1049</td>
      <td>301682320</td>
      <td>2</td>
      <td>2016-08-15 18:22:40.000000</td>
      <td>2016-08-15 17:22:32.000000</td>
      <td>10000.0</td>
      <td>13000.0</td>
      <td>30</td>
      <td>2016-09-01 16:06:48.000000</td>
      <td>NaN</td>
      <td>2016-09-14 00:00:00.000000</td>
      <td>2016-09-01 15:51:43.000000</td>
    </tr>
    <tr>
      <th>1</th>
      <td>8a2a81a74ce8c05d014cfb32a0da1049</td>
      <td>301883808</td>
      <td>9</td>
      <td>2017-04-28 18:39:07.000000</td>
      <td>2017-04-28 17:38:53.000000</td>
      <td>10000.0</td>
      <td>13000.0</td>
      <td>30</td>
      <td>2017-05-28 14:44:49.000000</td>
      <td>NaN</td>
      <td>2017-05-30 00:00:00.000000</td>
      <td>2017-05-26 00:00:00.000000</td>
    </tr>
    <tr>
      <th>2</th>
      <td>8a2a81a74ce8c05d014cfb32a0da1049</td>
      <td>301831714</td>
      <td>8</td>
      <td>2017-03-05 10:56:25.000000</td>
      <td>2017-03-05 09:56:19.000000</td>
      <td>20000.0</td>
      <td>23800.0</td>
      <td>30</td>
      <td>2017-04-26 22:18:56.000000</td>
      <td>NaN</td>
      <td>2017-04-04 00:00:00.000000</td>
      <td>2017-04-26 22:03:47.000000</td>
    </tr>
    <tr>
      <th>3</th>
      <td>8a8588f35438fe12015444567666018e</td>
      <td>301861541</td>
      <td>5</td>
      <td>2017-04-09 18:25:55.000000</td>
      <td>2017-04-09 17:25:42.000000</td>
      <td>10000.0</td>
      <td>11500.0</td>
      <td>15</td>
      <td>2017-04-24 01:35:52.000000</td>
      <td>NaN</td>
      <td>2017-04-24 00:00:00.000000</td>
      <td>2017-04-24 00:48:43.000000</td>
    </tr>
    <tr>
      <th>4</th>
      <td>8a85890754145ace015429211b513e16</td>
      <td>301941754</td>
      <td>2</td>
      <td>2017-06-17 09:29:57.000000</td>
      <td>2017-06-17 08:29:50.000000</td>
      <td>10000.0</td>
      <td>11500.0</td>
      <td>15</td>
      <td>2017-07-14 21:18:43.000000</td>
      <td>NaN</td>
      <td>2017-07-03 00:00:00.000000</td>
      <td>2017-07-14 21:08:35.000000</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Train</span> <span class="n">demographics</span> <span class="n">information</span><span class="p">:</span>

<span class="n">The</span> <span class="n">info</span><span class="p">()</span> <span class="n">method</span> <span class="ow">is</span> <span class="n">useful</span> <span class="n">to</span> <span class="n">get</span> <span class="n">a</span> <span class="n">quick</span> <span class="n">description</span> <span class="n">of</span> <span class="n">the</span> <span class="n">data</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="k">print</span><span class="p">(</span><span class="s">'</span><span class="se">\n</span><span class="s">--------------------Train dermographics--------------------</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">train_demo1</span><span class="o">.</span><span class="n">info</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="s">'</span><span class="se">\n</span><span class="s">----------------------Train performance--------------------</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">train_perf1</span><span class="o">.</span><span class="n">info</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="s">'</span><span class="se">\n</span><span class="s">-----------------------Train previous----------------------</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">train_perf1</span><span class="o">.</span><span class="n">info</span><span class="p">())</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>--------------------Train dermographics--------------------

&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 4346 entries, 0 to 4345
Data columns (total 9 columns):
customerid                    4346 non-null object
birthdate                     4346 non-null object
bank_account_type             4346 non-null object
longitude_gps                 4346 non-null float64
latitude_gps                  4346 non-null float64
bank_name_clients             4346 non-null object
bank_branch_clients           51 non-null object
employment_status_clients     3698 non-null object
level_of_education_clients    587 non-null object
dtypes: float64(2), object(7)
memory usage: 305.7+ KB



None



----------------------Train performance--------------------

&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 4368 entries, 0 to 4367
Data columns (total 10 columns):
customerid       4368 non-null object
systemloanid     4368 non-null int64
loannumber       4368 non-null int64
approveddate     4368 non-null object
creationdate     4368 non-null object
loanamount       4368 non-null float64
totaldue         4368 non-null float64
termdays         4368 non-null int64
referredby       587 non-null object
good_bad_flag    4368 non-null object
dtypes: float64(2), int64(3), object(5)
memory usage: 341.3+ KB



None



-----------------------Train previous----------------------

&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 4368 entries, 0 to 4367
Data columns (total 10 columns):
customerid       4368 non-null object
systemloanid     4368 non-null int64
loannumber       4368 non-null int64
approveddate     4368 non-null object
creationdate     4368 non-null object
loanamount       4368 non-null float64
totaldue         4368 non-null float64
termdays         4368 non-null int64
referredby       587 non-null object
good_bad_flag    4368 non-null object
dtypes: float64(2), int64(3), object(5)
memory usage: 341.3+ KB



None
</code></pre></div></div>

<font color="blue"> Train demographics: there are 4346 instances in the dataset, that it is fairly small by Machine Learning standards, but itâ€™s perfect to get started.
All attributes are categorical, except gps coordinates (`longitude_gps`, `latitude_gps`) which are numerical.</font>

<font color="green"> Train performance: there are 4368 instances in the dataset.  It is also fairly small by Machine Learning standards, but itâ€™s perfect to get started. Attributes are categorical (`customerid`,`approveddate`,`creationdate`,`referredby`,`good_bad_flag`) and numerical (`systemloanid`,`loannumber`,`loanamount`,`totaldue`,`termdays`) </font>

<font color="red"> Train previous: We also have 4386 instances in the dataset, 5 categorical (`customerid`,`approveddate`,`creationdate`,`referredby`,`good_bad_flag`) and 5 numerical variables (`systemloanid`,`loannumber`,`loanamount`,`totaldue`, `termdays`) </font>

<h4 id="basic-statistics-summary-of-each-numerical-attribute">Basic statistics: Summary of each numerical attribute:</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="k">print</span><span class="p">(</span><span class="s">'</span><span class="se">\n</span><span class="s">--------------------Train dermographics--------------------</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">train_demo1</span><span class="o">.</span><span class="n">describe</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="s">'</span><span class="se">\n</span><span class="s">----------------------Train performance--------------------</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">train_perf1</span><span class="o">.</span><span class="n">describe</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="s">'</span><span class="se">\n</span><span class="s">-----------------------Train previous----------------------</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">train_perf1</span><span class="o">.</span><span class="n">describe</span><span class="p">())</span>

</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>--------------------Train dermographics--------------------
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>longitude_gps</th>
      <th>latitude_gps</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>count</th>
      <td>4346.000000</td>
      <td>4346.000000</td>
    </tr>
    <tr>
      <th>mean</th>
      <td>4.626189</td>
      <td>7.251356</td>
    </tr>
    <tr>
      <th>std</th>
      <td>7.184832</td>
      <td>3.055052</td>
    </tr>
    <tr>
      <th>min</th>
      <td>-118.247009</td>
      <td>-33.868818</td>
    </tr>
    <tr>
      <th>25%</th>
      <td>3.354953</td>
      <td>6.470610</td>
    </tr>
    <tr>
      <th>50%</th>
      <td>3.593302</td>
      <td>6.621888</td>
    </tr>
    <tr>
      <th>75%</th>
      <td>6.545220</td>
      <td>7.425052</td>
    </tr>
    <tr>
      <th>max</th>
      <td>151.209290</td>
      <td>71.228069</td>
    </tr>
  </tbody>
</table>
</div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>----------------------Train performance--------------------
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>systemloanid</th>
      <th>loannumber</th>
      <th>loanamount</th>
      <th>totaldue</th>
      <th>termdays</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>count</th>
      <td>4.368000e+03</td>
      <td>4368.000000</td>
      <td>4368.000000</td>
      <td>4368.000000</td>
      <td>4368.000000</td>
    </tr>
    <tr>
      <th>mean</th>
      <td>3.019810e+08</td>
      <td>5.172390</td>
      <td>17809.065934</td>
      <td>21257.377679</td>
      <td>29.261676</td>
    </tr>
    <tr>
      <th>std</th>
      <td>1.343115e+04</td>
      <td>3.653569</td>
      <td>10749.694571</td>
      <td>11943.510416</td>
      <td>11.512519</td>
    </tr>
    <tr>
      <th>min</th>
      <td>3.019585e+08</td>
      <td>2.000000</td>
      <td>10000.000000</td>
      <td>10000.000000</td>
      <td>15.000000</td>
    </tr>
    <tr>
      <th>25%</th>
      <td>3.019691e+08</td>
      <td>2.000000</td>
      <td>10000.000000</td>
      <td>13000.000000</td>
      <td>30.000000</td>
    </tr>
    <tr>
      <th>50%</th>
      <td>3.019801e+08</td>
      <td>4.000000</td>
      <td>10000.000000</td>
      <td>13000.000000</td>
      <td>30.000000</td>
    </tr>
    <tr>
      <th>75%</th>
      <td>3.019935e+08</td>
      <td>7.000000</td>
      <td>20000.000000</td>
      <td>24500.000000</td>
      <td>30.000000</td>
    </tr>
    <tr>
      <th>max</th>
      <td>3.020040e+08</td>
      <td>27.000000</td>
      <td>60000.000000</td>
      <td>68100.000000</td>
      <td>90.000000</td>
    </tr>
  </tbody>
</table>
</div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>-----------------------Train previous----------------------
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>systemloanid</th>
      <th>loannumber</th>
      <th>loanamount</th>
      <th>totaldue</th>
      <th>termdays</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>count</th>
      <td>4.368000e+03</td>
      <td>4368.000000</td>
      <td>4368.000000</td>
      <td>4368.000000</td>
      <td>4368.000000</td>
    </tr>
    <tr>
      <th>mean</th>
      <td>3.019810e+08</td>
      <td>5.172390</td>
      <td>17809.065934</td>
      <td>21257.377679</td>
      <td>29.261676</td>
    </tr>
    <tr>
      <th>std</th>
      <td>1.343115e+04</td>
      <td>3.653569</td>
      <td>10749.694571</td>
      <td>11943.510416</td>
      <td>11.512519</td>
    </tr>
    <tr>
      <th>min</th>
      <td>3.019585e+08</td>
      <td>2.000000</td>
      <td>10000.000000</td>
      <td>10000.000000</td>
      <td>15.000000</td>
    </tr>
    <tr>
      <th>25%</th>
      <td>3.019691e+08</td>
      <td>2.000000</td>
      <td>10000.000000</td>
      <td>13000.000000</td>
      <td>30.000000</td>
    </tr>
    <tr>
      <th>50%</th>
      <td>3.019801e+08</td>
      <td>4.000000</td>
      <td>10000.000000</td>
      <td>13000.000000</td>
      <td>30.000000</td>
    </tr>
    <tr>
      <th>75%</th>
      <td>3.019935e+08</td>
      <td>7.000000</td>
      <td>20000.000000</td>
      <td>24500.000000</td>
      <td>30.000000</td>
    </tr>
    <tr>
      <th>max</th>
      <td>3.020040e+08</td>
      <td>27.000000</td>
      <td>60000.000000</td>
      <td>68100.000000</td>
      <td>90.000000</td>
    </tr>
  </tbody>
</table>
</div>

<p>The first thing to notice about these three datasets is that <code class="highlighter-rouge">Train dermographics dataset</code> differ with  the other two dataset by size and attributes.</p>

<p>The count , mean , min , and max rows are self-explanatory.  Note that the null values are ignored. The std row shows the standard deviation, which measures how dispersed the values are. The 25%, 50%, and 75% rows show the corresponding percentiles: a percentile indicates the value below which a given percentage of observations in a group of observations falls</p>

<h3 id="impute-for-missing-values">Impute for missing values</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="s">'</span><span class="se">\n</span><span class="s">--------------------Train dermographics--------------------</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">train_demo1</span><span class="o">.</span><span class="n">isnull</span><span class="p">()</span><span class="o">.</span><span class="nb">sum</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="s">'</span><span class="se">\n</span><span class="s">----------------------Train performance--------------------</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">train_perf1</span><span class="o">.</span><span class="n">isnull</span><span class="p">()</span><span class="o">.</span><span class="nb">sum</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="s">'</span><span class="se">\n</span><span class="s">-----------------------Train previous----------------------</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">train_prev1</span><span class="o">.</span><span class="n">isnull</span><span class="p">()</span><span class="o">.</span><span class="nb">sum</span><span class="p">())</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>--------------------Train dermographics--------------------




customerid                       0
birthdate                        0
bank_account_type                0
longitude_gps                    0
latitude_gps                     0
bank_name_clients                0
bank_branch_clients           4295
employment_status_clients      648
level_of_education_clients    3759
dtype: int64



----------------------Train performance--------------------




customerid          0
systemloanid        0
loannumber          0
approveddate        0
creationdate        0
loanamount          0
totaldue            0
termdays            0
referredby       3781
good_bad_flag       0
dtype: int64



-----------------------Train previous----------------------




customerid             0
systemloanid           0
loannumber             0
approveddate           0
creationdate           0
loanamount             0
totaldue               0
termdays               0
closeddate             0
referredby         17157
firstduedate           0
firstrepaiddate        0
dtype: int64
</code></pre></div></div>

<h2 id="exploratory-data-analysis">EXPLORATORY DATA ANALYSIS</h2>

<p>For numerical attributes:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\033</span><span class="s">[1m"</span><span class="o">+</span><span class="s">'Train demographics dataset:'</span><span class="o">+</span><span class="s">"</span><span class="se">\033</span><span class="s">[10m"</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">train_demo1</span><span class="o">.</span><span class="n">hist</span><span class="p">(</span><span class="n">bins</span><span class="o">=</span><span class="mi">50</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span><span class="mi">3</span><span class="p">)))</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[1mTrain demographics dataset:[10m



array([[&lt;matplotlib.axes._subplots.AxesSubplot object at 0x7fda11b6e668&gt;,
        &lt;matplotlib.axes._subplots.AxesSubplot object at 0x7fda11354c18&gt;]],
      dtype=object)
</code></pre></div></div>

<p><img src="https://drive.google.com/uc?export=view&amp;id=1wusAhL6vcHf0EKOraDSVjuwSKpeXrMDl" alt="png" /></p>

<h4 id="geographical-location">Geographical location:</h4>
<p>The location columns are the only numeric variables in our demographics dataset. It also has no missing data, which makes sense as proof of address is a major requirement when dealing with financial institutions.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">folium</span> <span class="k">as</span> <span class="n">fl</span>

<span class="c1">#base map
</span><span class="n">gps_map</span> <span class="o">=</span> <span class="n">fl</span><span class="o">.</span><span class="n">Map</span><span class="p">(</span><span class="n">location</span><span class="o">=</span><span class="p">[(</span><span class="n">train_demo1</span><span class="p">[</span><span class="s">'latitude_gps'</span><span class="p">])</span><span class="o">.</span><span class="n">mean</span><span class="p">(),</span> <span class="p">(</span><span class="n">train_demo1</span><span class="p">[</span><span class="s">'longitude_gps'</span><span class="p">])</span><span class="o">.</span><span class="n">mean</span><span class="p">()],</span>
                 <span class="n">zoom_start</span> <span class="o">=</span> <span class="mi">2</span><span class="p">)</span>


<span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">train_demo1</span><span class="p">[</span><span class="s">'latitude_gps'</span><span class="p">],</span> <span class="n">train_demo1</span><span class="p">[</span><span class="s">'longitude_gps'</span><span class="p">]):</span>

    <span class="n">fl</span><span class="o">.</span><span class="n">CircleMarker</span><span class="p">(</span><span class="n">radius</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="n">location</span> <span class="o">=</span> <span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">],</span>
                    <span class="n">color</span> <span class="o">=</span> <span class="s">'red'</span><span class="p">,</span>
                    <span class="n">fill</span> <span class="o">=</span> <span class="bp">True</span><span class="p">,</span>
                    <span class="n">fill_opacity</span> <span class="o">=</span> <span class="mi">1</span>
                   <span class="p">)</span><span class="o">.</span><span class="n">add_to</span><span class="p">(</span><span class="n">gps_map</span><span class="p">)</span>
<span class="n">gps_map</span>
</code></pre></div></div>

<div style="width:100%;"><div style="position:relative;width:100%;height:0;padding-bottom:60%;"><iframe src="data:text/html;charset=utf-8;base64," style="position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;" allowfullscreen="" webkitallowfullscreen="" mozallowfullscreen=""></iframe></div></div>

<font color="green">Note: for better view, the map above can be zoomed in and out.</font>

<p>Setting the alpha option to 0.3 makes it much easier to visualize the places where there is a high density of data points</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">train_demo1</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">kind</span><span class="o">=</span><span class="s">"scatter"</span><span class="p">,</span> <span class="n">x</span><span class="o">=</span><span class="s">"longitude_gps"</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s">"latitude_gps"</span><span class="p">,</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">7</span><span class="p">)</span> <span class="p">,</span><span class="n">alpha</span><span class="o">=</span><span class="mf">0.3</span><span class="p">)</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>'c' argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with 'x' &amp; 'y'.  Please use a 2-D array with a single row if you really want to specify the same RGB or RGBA value for all points.


&lt;matplotlib.axes._subplots.AxesSubplot at 0x7fda0f88de48&gt;
</code></pre></div></div>

<p><img src="https://drive.google.com/uc?export=view&amp;id=1NKOKE3XZ6jpUNhdUZYlErwlrXt8NFAcT" alt="png" /></p>

<p>Insight: It appears that many clients are mainly scattered across Nigeria (Africa), Lagos and Abuja host two noticeable clusters, and the geographical concentration of clients gradually becomes sparsely dense with distance from the Western coast.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\033</span><span class="s">[1m"</span><span class="o">+</span><span class="s">'Train performance dataset:'</span><span class="o">+</span><span class="s">"</span><span class="se">\033</span><span class="s">[10m"</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">train_perf1</span><span class="o">.</span><span class="n">hist</span><span class="p">(</span><span class="n">bins</span><span class="o">=</span><span class="mi">50</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span><span class="mi">10</span><span class="p">)))</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[1mTrain performance dataset:[10m



array([[&lt;matplotlib.axes._subplots.AxesSubplot object at 0x7fda0de61828&gt;,
        &lt;matplotlib.axes._subplots.AxesSubplot object at 0x7fda0de0c470&gt;],
       [&lt;matplotlib.axes._subplots.AxesSubplot object at 0x7fda0de31d68&gt;,
        &lt;matplotlib.axes._subplots.AxesSubplot object at 0x7fda0ddde710&gt;],
       [&lt;matplotlib.axes._subplots.AxesSubplot object at 0x7fda0dd8d080&gt;,
        &lt;matplotlib.axes._subplots.AxesSubplot object at 0x7fda0ddb29e8&gt;]],
      dtype=object)
</code></pre></div></div>

<p><img src="https://drive.google.com/uc?export=view&amp;id=1K-uz8njK1Q4dlK6VIHn7-sNNJHHp7jol" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\033</span><span class="s">[1m"</span><span class="o">+</span><span class="s">'Train previous dataset:'</span><span class="o">+</span><span class="s">"</span><span class="se">\033</span><span class="s">[10m"</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">train_prev1</span><span class="o">.</span><span class="n">hist</span><span class="p">(</span><span class="n">bins</span><span class="o">=</span><span class="mi">30</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span><span class="mi">10</span><span class="p">)))</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[1mTrain previous dataset:[10m



array([[&lt;matplotlib.axes._subplots.AxesSubplot object at 0x7fda0de61860&gt;,
        &lt;matplotlib.axes._subplots.AxesSubplot object at 0x7fda0da39d68&gt;],
       [&lt;matplotlib.axes._subplots.AxesSubplot object at 0x7fda0d9c96a0&gt;,
        &lt;matplotlib.axes._subplots.AxesSubplot object at 0x7fda0d9ebfd0&gt;],
       [&lt;matplotlib.axes._subplots.AxesSubplot object at 0x7fda0d99a978&gt;,
        &lt;matplotlib.axes._subplots.AxesSubplot object at 0x7fda0d947320&gt;]],
      dtype=object)
</code></pre></div></div>

<p><img src="https://drive.google.com/uc?export=view&amp;id=1AhGxIpygHRtxUZiSi2YgHq4ejUHXHKNM" alt="png" /></p>

<h3 id="merging-datasets">Merging datasets:</h3>

<p>Approach:  we shall merge <code class="highlighter-rouge">demographics dataset</code> and <code class="highlighter-rouge">train performance dataset</code> using customerid.  Then, the resultant dataset will be merged with <code class="highlighter-rouge">train previous dataset</code> using customerid.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">train_demo1</span><span class="p">,</span> <span class="n">train_perf1</span><span class="p">,</span> <span class="n">how</span> <span class="o">=</span> <span class="s">'inner'</span><span class="p">,</span> <span class="n">on</span> <span class="o">=</span> <span class="s">'customerid'</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">train_demo</span><span class="o">.</span><span class="n">shape</span><span class="p">,</span> <span class="n">train_perf</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">(</span><span class="mi">5</span><span class="p">))</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(4346, 9) (4368, 10)
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>customerid</th>
      <th>birthdate</th>
      <th>bank_account_type</th>
      <th>longitude_gps</th>
      <th>latitude_gps</th>
      <th>bank_name_clients</th>
      <th>bank_branch_clients</th>
      <th>employment_status_clients</th>
      <th>level_of_education_clients</th>
      <th>systemloanid</th>
      <th>loannumber</th>
      <th>approveddate</th>
      <th>creationdate</th>
      <th>loanamount</th>
      <th>totaldue</th>
      <th>termdays</th>
      <th>referredby</th>
      <th>good_bad_flag</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>8a858e135cb22031015cbafc76964ebd</td>
      <td>1973-10-10 00:00:00.000000</td>
      <td>Savings</td>
      <td>3.319219</td>
      <td>6.528604</td>
      <td>GT Bank</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>301964962</td>
      <td>2</td>
      <td>2017-07-05 14:29:48.000000</td>
      <td>2017-07-05 13:29:42.000000</td>
      <td>10000.0</td>
      <td>13000.0</td>
      <td>30</td>
      <td>8a858899538ddb8e0153a780c56e34bb</td>
      <td>Good</td>
    </tr>
    <tr>
      <th>1</th>
      <td>8a858e275c7ea5ec015c82482d7c3996</td>
      <td>1986-01-21 00:00:00.000000</td>
      <td>Savings</td>
      <td>3.325598</td>
      <td>7.119403</td>
      <td>Sterling Bank</td>
      <td>NaN</td>
      <td>Permanent</td>
      <td>NaN</td>
      <td>301972172</td>
      <td>2</td>
      <td>2017-07-10 21:21:46.000000</td>
      <td>2017-07-10 20:21:40.000000</td>
      <td>10000.0</td>
      <td>13000.0</td>
      <td>30</td>
      <td>NaN</td>
      <td>Bad</td>
    </tr>
    <tr>
      <th>2</th>
      <td>8a858e5b5bd99460015bdc95cd485634</td>
      <td>1987-04-01 00:00:00.000000</td>
      <td>Savings</td>
      <td>5.746100</td>
      <td>5.563174</td>
      <td>Fidelity Bank</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>301976271</td>
      <td>4</td>
      <td>2017-07-13 15:40:27.000000</td>
      <td>2017-07-13 14:40:19.000000</td>
      <td>10000.0</td>
      <td>13000.0</td>
      <td>30</td>
      <td>NaN</td>
      <td>Good</td>
    </tr>
    <tr>
      <th>3</th>
      <td>8a858efd5ca70688015cabd1f1e94b55</td>
      <td>1991-07-19 00:00:00.000000</td>
      <td>Savings</td>
      <td>3.362850</td>
      <td>6.642485</td>
      <td>GT Bank</td>
      <td>NaN</td>
      <td>Permanent</td>
      <td>NaN</td>
      <td>301997763</td>
      <td>2</td>
      <td>2017-07-26 21:03:17.000000</td>
      <td>2017-07-26 20:03:09.000000</td>
      <td>10000.0</td>
      <td>11500.0</td>
      <td>15</td>
      <td>NaN</td>
      <td>Good</td>
    </tr>
    <tr>
      <th>4</th>
      <td>8a858ea05a859123015a8892914d15b7</td>
      <td>1990-07-21 00:00:00.000000</td>
      <td>Savings</td>
      <td>3.365935</td>
      <td>6.564823</td>
      <td>Access Bank</td>
      <td>NaN</td>
      <td>Permanent</td>
      <td>NaN</td>
      <td>301992494</td>
      <td>6</td>
      <td>2017-07-23 21:44:43.000000</td>
      <td>2017-07-23 20:44:36.000000</td>
      <td>20000.0</td>
      <td>24500.0</td>
      <td>30</td>
      <td>NaN</td>
      <td>Good</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df1</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">df</span><span class="p">,</span> <span class="n">train_prev</span><span class="p">,</span> <span class="n">how</span> <span class="o">=</span> <span class="s">'inner'</span><span class="p">,</span> <span class="n">on</span> <span class="o">=</span> <span class="s">'customerid'</span><span class="p">)</span>
<span class="n">df1</span><span class="o">.</span><span class="n">shape</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(13693, 29)
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">display</span><span class="p">(</span><span class="n">df1</span><span class="o">.</span><span class="n">head</span><span class="p">(</span><span class="mi">5</span><span class="p">))</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>customerid</th>
      <th>birthdate</th>
      <th>bank_account_type</th>
      <th>longitude_gps</th>
      <th>latitude_gps</th>
      <th>bank_name_clients</th>
      <th>bank_branch_clients</th>
      <th>employment_status_clients</th>
      <th>level_of_education_clients</th>
      <th>systemloanid_x</th>
      <th>...</th>
      <th>loannumber_y</th>
      <th>approveddate_y</th>
      <th>creationdate_y</th>
      <th>loanamount_y</th>
      <th>totaldue_y</th>
      <th>termdays_y</th>
      <th>closeddate</th>
      <th>referredby_y</th>
      <th>firstduedate</th>
      <th>firstrepaiddate</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>8a858e135cb22031015cbafc76964ebd</td>
      <td>1973-10-10 00:00:00.000000</td>
      <td>Savings</td>
      <td>3.319219</td>
      <td>6.528604</td>
      <td>GT Bank</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>301964962</td>
      <td>...</td>
      <td>1</td>
      <td>2017-06-19 17:55:26.000000</td>
      <td>2017-06-19 16:54:19.000000</td>
      <td>10000.0</td>
      <td>11500.0</td>
      <td>15</td>
      <td>2017-07-04 18:09:47.000000</td>
      <td>8a858899538ddb8e0153a780c56e34bb</td>
      <td>2017-07-05 00:00:00.000000</td>
      <td>2017-07-04 17:59:36.000000</td>
    </tr>
    <tr>
      <th>1</th>
      <td>8a858e275c7ea5ec015c82482d7c3996</td>
      <td>1986-01-21 00:00:00.000000</td>
      <td>Savings</td>
      <td>3.325598</td>
      <td>7.119403</td>
      <td>Sterling Bank</td>
      <td>NaN</td>
      <td>Permanent</td>
      <td>NaN</td>
      <td>301972172</td>
      <td>...</td>
      <td>1</td>
      <td>2017-06-07 12:47:30.000000</td>
      <td>2017-06-07 11:46:22.000000</td>
      <td>10000.0</td>
      <td>13000.0</td>
      <td>30</td>
      <td>2017-07-10 08:52:54.000000</td>
      <td>NaN</td>
      <td>2017-07-07 00:00:00.000000</td>
      <td>2017-07-10 08:42:44.000000</td>
    </tr>
    <tr>
      <th>2</th>
      <td>8a858e5b5bd99460015bdc95cd485634</td>
      <td>1987-04-01 00:00:00.000000</td>
      <td>Savings</td>
      <td>5.746100</td>
      <td>5.563174</td>
      <td>Fidelity Bank</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>301976271</td>
      <td>...</td>
      <td>3</td>
      <td>2017-06-08 11:49:34.000000</td>
      <td>2017-06-08 10:49:27.000000</td>
      <td>10000.0</td>
      <td>13000.0</td>
      <td>30</td>
      <td>2017-07-11 10:12:20.000000</td>
      <td>NaN</td>
      <td>2017-07-10 00:00:00.000000</td>
      <td>2017-07-11 10:02:11.000000</td>
    </tr>
    <tr>
      <th>3</th>
      <td>8a858e5b5bd99460015bdc95cd485634</td>
      <td>1987-04-01 00:00:00.000000</td>
      <td>Savings</td>
      <td>5.746100</td>
      <td>5.563174</td>
      <td>Fidelity Bank</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>301976271</td>
      <td>...</td>
      <td>1</td>
      <td>2017-05-08 11:07:01.000000</td>
      <td>2017-05-08 10:06:40.000000</td>
      <td>10000.0</td>
      <td>11500.0</td>
      <td>15</td>
      <td>2017-05-27 13:02:53.000000</td>
      <td>NaN</td>
      <td>2017-05-23 00:00:00.000000</td>
      <td>2017-05-27 12:52:45.000000</td>
    </tr>
    <tr>
      <th>4</th>
      <td>8a858e5b5bd99460015bdc95cd485634</td>
      <td>1987-04-01 00:00:00.000000</td>
      <td>Savings</td>
      <td>5.746100</td>
      <td>5.563174</td>
      <td>Fidelity Bank</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>301976271</td>
      <td>...</td>
      <td>2</td>
      <td>2017-05-27 17:10:41.000000</td>
      <td>2017-05-27 16:10:34.000000</td>
      <td>10000.0</td>
      <td>11500.0</td>
      <td>15</td>
      <td>2017-06-08 11:13:50.000000</td>
      <td>NaN</td>
      <td>2017-06-12 00:00:00.000000</td>
      <td>2017-06-08 11:03:40.000000</td>
    </tr>
  </tbody>
</table>
<p>5 rows Ã— 29 columns</p>
</div>

<p>Letâ€™s remove redundant column:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df1</span> <span class="o">=</span> <span class="n">df1</span><span class="o">.</span><span class="n">drop</span><span class="p">([</span><span class="s">'bank_account_type'</span><span class="p">,</span><span class="s">'bank_name_clients'</span><span class="p">,</span><span class="s">'bank_branch_clients'</span><span class="p">,</span>
                <span class="s">'level_of_education_clients'</span><span class="p">,</span><span class="s">'systemloanid_x'</span><span class="p">,</span><span class="s">'loannumber_x'</span><span class="p">,</span>
               <span class="s">'referredby_x'</span><span class="p">,</span><span class="s">'referredby_y'</span><span class="p">,</span> <span class="s">'approveddate_x'</span><span class="p">,</span> <span class="s">'creationdate_x'</span><span class="p">,</span>
               <span class="s">'approveddate_y'</span><span class="p">,</span><span class="s">'creationdate_y'</span><span class="p">,</span><span class="s">'closeddate'</span><span class="p">,</span><span class="s">'firstduedate'</span><span class="p">,</span><span class="s">'firstrepaiddate'</span><span class="p">,</span>
                <span class="s">'systemloanid_y'</span><span class="p">,</span><span class="s">'loannumber_y'</span><span class="p">,</span><span class="s">'loanamount_y'</span><span class="p">,</span><span class="s">'totaldue_y'</span><span class="p">],</span> <span class="n">axis</span> <span class="o">=</span> <span class="mi">1</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df1</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>customerid</th>
      <th>birthdate</th>
      <th>longitude_gps</th>
      <th>latitude_gps</th>
      <th>employment_status_clients</th>
      <th>loanamount_x</th>
      <th>totaldue_x</th>
      <th>termdays_x</th>
      <th>good_bad_flag</th>
      <th>termdays_y</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>8a858e135cb22031015cbafc76964ebd</td>
      <td>1973-10-10 00:00:00.000000</td>
      <td>3.319219</td>
      <td>6.528604</td>
      <td>NaN</td>
      <td>10000.0</td>
      <td>13000.0</td>
      <td>30</td>
      <td>Good</td>
      <td>15</td>
    </tr>
    <tr>
      <th>1</th>
      <td>8a858e275c7ea5ec015c82482d7c3996</td>
      <td>1986-01-21 00:00:00.000000</td>
      <td>3.325598</td>
      <td>7.119403</td>
      <td>Permanent</td>
      <td>10000.0</td>
      <td>13000.0</td>
      <td>30</td>
      <td>Bad</td>
      <td>30</td>
    </tr>
    <tr>
      <th>2</th>
      <td>8a858e5b5bd99460015bdc95cd485634</td>
      <td>1987-04-01 00:00:00.000000</td>
      <td>5.746100</td>
      <td>5.563174</td>
      <td>NaN</td>
      <td>10000.0</td>
      <td>13000.0</td>
      <td>30</td>
      <td>Good</td>
      <td>30</td>
    </tr>
    <tr>
      <th>3</th>
      <td>8a858e5b5bd99460015bdc95cd485634</td>
      <td>1987-04-01 00:00:00.000000</td>
      <td>5.746100</td>
      <td>5.563174</td>
      <td>NaN</td>
      <td>10000.0</td>
      <td>13000.0</td>
      <td>30</td>
      <td>Good</td>
      <td>15</td>
    </tr>
    <tr>
      <th>4</th>
      <td>8a858e5b5bd99460015bdc95cd485634</td>
      <td>1987-04-01 00:00:00.000000</td>
      <td>5.746100</td>
      <td>5.563174</td>
      <td>NaN</td>
      <td>10000.0</td>
      <td>13000.0</td>
      <td>30</td>
      <td>Good</td>
      <td>15</td>
    </tr>
  </tbody>
</table>
</div>

<h3 id="imputing-missing-values">Imputing missing values:</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">display</span><span class="p">(</span><span class="n">df1</span><span class="o">.</span><span class="n">isna</span><span class="p">()</span><span class="o">.</span><span class="nb">sum</span><span class="p">())</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>customerid                      0
birthdate                       0
longitude_gps                   0
latitude_gps                    0
employment_status_clients    1363
loanamount_x                    0
totaldue_x                      0
termdays_x                      0
good_bad_flag                   0
termdays_y                      0
dtype: int64
</code></pre></div></div>

<p>We see that <code class="highlighter-rouge">employment_status_clients</code> columns contains 1363 instances that are nans, so we will drop those instances â€“ that means, more training data will be lost!</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df1</span> <span class="o">=</span> <span class="n">df1</span><span class="o">.</span><span class="n">dropna</span><span class="p">()</span>

<span class="n">df1</span><span class="p">[</span><span class="s">'employment_status_clients'</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Permanent        9138
Self-Employed    2319
Student           615
Unemployed        219
Retired            29
Contract           10
Name: employment_status_clients, dtype: int64
</code></pre></div></div>

<p>Letâ€™s make a pie plot for our categorical feature after imputing nan values</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">pie1</span> <span class="o">=</span> <span class="n">df1</span><span class="p">[</span><span class="s">'employment_status_clients'</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">kind</span> <span class="o">=</span> <span class="s">'pie'</span><span class="p">,</span> <span class="n">explode</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mf">0.1</span><span class="p">),</span> <span class="n">autopct</span><span class="o">=</span><span class="s">'</span><span class="si">%1.2</span><span class="s">f</span><span class="si">%%</span><span class="s">'</span><span class="p">,</span>
                                                <span class="n">shadow</span> <span class="o">=</span> <span class="bp">True</span><span class="p">,</span> <span class="n">legend</span> <span class="o">=</span> <span class="s">"upper left"</span><span class="p">,</span> <span class="n">labels</span> <span class="o">=</span> <span class="bp">None</span><span class="p">)</span>
<span class="n">pie1</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7fda0d78e710&gt;
</code></pre></div></div>

<p><img src="https://drive.google.com/uc?export=view&amp;id=1U-U7oOkZROEoNm2Q8aFYCQqybfn1y0Vr" alt="png" /></p>

<p>Replace binary variables to numerical features in <code class="highlighter-rouge">employment_status_clients</code>:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df1</span><span class="p">[</span><span class="s">'employment_status_clients'</span><span class="p">]</span> <span class="o">=</span> <span class="n">df1</span><span class="p">[</span><span class="s">'employment_status_clients'</span><span class="p">]</span><span class="o">.</span><span class="n">replace</span><span class="p">({</span><span class="s">'Permanent'</span><span class="p">:</span><span class="mi">5</span><span class="p">,</span> <span class="s">'Self-Employed'</span><span class="p">:</span><span class="mi">4</span><span class="p">,</span>
                                                                             <span class="s">'Student'</span><span class="p">:</span><span class="mi">3</span><span class="p">,</span> <span class="s">'Unemployed'</span><span class="p">:</span><span class="mi">2</span><span class="p">,</span>
                                                                            <span class="s">'Retired'</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span> <span class="s">'Contract'</span><span class="p">:</span><span class="mi">0</span><span class="p">})</span>
</code></pre></div></div>

<p>Letâ€™s make a quick view of a new dataset:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">display</span><span class="p">(</span><span class="n">df1</span><span class="o">.</span><span class="n">head</span><span class="p">(</span><span class="mi">5</span><span class="p">))</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>customerid</th>
      <th>birthdate</th>
      <th>longitude_gps</th>
      <th>latitude_gps</th>
      <th>employment_status_clients</th>
      <th>loanamount_x</th>
      <th>totaldue_x</th>
      <th>termdays_x</th>
      <th>good_bad_flag</th>
      <th>termdays_y</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>1</th>
      <td>8a858e275c7ea5ec015c82482d7c3996</td>
      <td>1986-01-21 00:00:00.000000</td>
      <td>3.325598</td>
      <td>7.119403</td>
      <td>5</td>
      <td>10000.0</td>
      <td>13000.0</td>
      <td>30</td>
      <td>Bad</td>
      <td>30</td>
    </tr>
    <tr>
      <th>5</th>
      <td>8a858efd5ca70688015cabd1f1e94b55</td>
      <td>1991-07-19 00:00:00.000000</td>
      <td>3.362850</td>
      <td>6.642485</td>
      <td>5</td>
      <td>10000.0</td>
      <td>11500.0</td>
      <td>15</td>
      <td>Good</td>
      <td>15</td>
    </tr>
    <tr>
      <th>6</th>
      <td>8a858ea05a859123015a8892914d15b7</td>
      <td>1990-07-21 00:00:00.000000</td>
      <td>3.365935</td>
      <td>6.564823</td>
      <td>5</td>
      <td>20000.0</td>
      <td>24500.0</td>
      <td>30</td>
      <td>Good</td>
      <td>30</td>
    </tr>
    <tr>
      <th>7</th>
      <td>8a858ea05a859123015a8892914d15b7</td>
      <td>1990-07-21 00:00:00.000000</td>
      <td>3.365935</td>
      <td>6.564823</td>
      <td>5</td>
      <td>20000.0</td>
      <td>24500.0</td>
      <td>30</td>
      <td>Good</td>
      <td>30</td>
    </tr>
    <tr>
      <th>8</th>
      <td>8a858ea05a859123015a8892914d15b7</td>
      <td>1990-07-21 00:00:00.000000</td>
      <td>3.365935</td>
      <td>6.564823</td>
      <td>5</td>
      <td>20000.0</td>
      <td>24500.0</td>
      <td>30</td>
      <td>Good</td>
      <td>30</td>
    </tr>
  </tbody>
</table>
</div>

<p>We have duplicate columns <code class="highlighter-rouge">termdays</code>, we shall remove <code class="highlighter-rouge">termdays_y</code></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df1</span> <span class="o">=</span> <span class="n">df1</span><span class="o">.</span><span class="n">drop</span><span class="p">([</span><span class="s">'termdays_y'</span><span class="p">],</span> <span class="n">axis</span> <span class="o">=</span> <span class="mi">1</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">display</span><span class="p">(</span><span class="n">df1</span><span class="o">.</span><span class="n">info</span><span class="p">())</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
Int64Index: 12330 entries, 1 to 13691
Data columns (total 9 columns):
customerid                   12330 non-null object
birthdate                    12330 non-null object
longitude_gps                12330 non-null float64
latitude_gps                 12330 non-null float64
employment_status_clients    12330 non-null int64
loanamount_x                 12330 non-null float64
totaldue_x                   12330 non-null float64
termdays_x                   12330 non-null int64
good_bad_flag                12330 non-null object
dtypes: float64(4), int64(2), object(3)
memory usage: 963.3+ KB



None
</code></pre></div></div>

<font color="green"> For a new dataset: there are now 12330 instances and it is fairly reasonable by Machine Learning standards.</font>

<p>All attributes are numerical, except <code class="highlighter-rouge">customerid</code>, <code class="highlighter-rouge">birthdate</code> and <code class="highlighter-rouge">good_bad_flag</code> which are categorical features.</p>

<p>Letâ€™s view a pie chart for our target variable:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">pie2</span> <span class="o">=</span> <span class="n">df1</span><span class="p">[</span><span class="s">'good_bad_flag'</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">kind</span> <span class="o">=</span> <span class="s">'pie'</span><span class="p">,</span> <span class="n">explode</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mf">0.1</span><span class="p">),</span> <span class="n">autopct</span><span class="o">=</span><span class="s">'</span><span class="si">%1.2</span><span class="s">f</span><span class="si">%%</span><span class="s">'</span><span class="p">,</span>
                                                <span class="n">shadow</span> <span class="o">=</span> <span class="bp">True</span><span class="p">,</span> <span class="n">legend</span> <span class="o">=</span> <span class="bp">True</span><span class="p">,</span> <span class="n">labels</span> <span class="o">=</span> <span class="bp">None</span><span class="p">)</span>
<span class="n">pie2</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x7fda0d7b02e8&gt;
</code></pre></div></div>

<p><img src="https://drive.google.com/uc?export=view&amp;id=1H3BGVTfNHw7w16OwSroCCKLvspnbbYzT" alt="png" /></p>

<p>NB: - One important thing to note, the dataset is imbalanced. This is an imbalanced class problem because there are significantly more clients who are good payers than bad payers!</p>

<h2 id="feature-engineering-for-a-new-dataset">Feature engineering (for a new dataset)</h2>

<p>Convert categorical variables to numerical variables for machine learning:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df1</span><span class="p">[</span><span class="s">'good_bad_flag'</span><span class="p">]</span> <span class="o">=</span> <span class="n">df1</span><span class="p">[</span><span class="s">'good_bad_flag'</span><span class="p">]</span><span class="o">.</span><span class="n">replace</span><span class="p">({</span><span class="s">'Good'</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span> <span class="s">'Bad'</span><span class="p">:</span><span class="mi">0</span><span class="p">})</span>
<span class="n">df1</span><span class="p">[</span><span class="s">'good_bad_flag'</span><span class="p">]</span><span class="o">.</span><span class="n">unique</span><span class="p">()</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([0, 1])
</code></pre></div></div>

<h3 id="converting-birthdate-to-age">Converting birthdate to age:</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">now</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Timestamp</span><span class="p">(</span><span class="s">'now'</span><span class="p">)</span>

<span class="n">df1</span><span class="p">[</span><span class="s">'birthdate'</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df1</span><span class="p">[</span><span class="s">'birthdate'</span><span class="p">])</span>
<span class="n">df1</span><span class="p">[</span><span class="s">'birthdate'</span><span class="p">]</span> <span class="o">=</span> <span class="n">df1</span><span class="p">[</span><span class="s">'birthdate'</span><span class="p">]</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="n">df1</span><span class="p">[</span><span class="s">'birthdate'</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">now</span><span class="p">,</span> <span class="n">df1</span><span class="p">[</span><span class="s">'birthdate'</span><span class="p">]</span> <span class="o">-</span>  <span class="n">np</span><span class="o">.</span><span class="n">timedelta64</span><span class="p">(</span><span class="mi">100</span><span class="p">,</span> <span class="s">'Y'</span><span class="p">))</span>
<span class="n">df1</span><span class="p">[</span><span class="s">'age'</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">now</span> <span class="o">-</span> <span class="n">df1</span><span class="p">[</span><span class="s">'birthdate'</span><span class="p">])</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="s">'&lt;m8[Y]'</span><span class="p">)</span>

<span class="n">df1</span> <span class="o">=</span> <span class="n">df1</span><span class="o">.</span><span class="n">drop</span><span class="p">(</span><span class="s">'birthdate'</span><span class="p">,</span> <span class="n">axis</span> <span class="o">=</span> <span class="mi">1</span><span class="p">)</span>

</code></pre></div></div>

<p>Letâ€™s plot the distribution of age:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#sns.distplot(df1['age'], bins = 30)
</span><span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">()</span>
<span class="n">sns</span><span class="o">.</span><span class="n">distplot</span><span class="p">(</span><span class="n">df1</span><span class="p">[</span><span class="s">'age'</span><span class="p">],</span> <span class="n">bins</span> <span class="o">=</span> <span class="mi">30</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">'Age [years]'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>
<p><img src="https://drive.google.com/uc?export=view&amp;id=15-xj31dWZDfja218uNSwWIlD4wqFms3k" alt="png" /></p>

<p>Insight: The average age is around 35.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="s">'</span><span class="se">\n</span><span class="s">-------------------------------------------Basic statistics--------------------------------------------'</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">df1</span><span class="o">.</span><span class="n">describe</span><span class="p">())</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>-------------------------------------------Basic statistics--------------------------------------------
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>longitude_gps</th>
      <th>latitude_gps</th>
      <th>employment_status_clients</th>
      <th>loanamount_x</th>
      <th>totaldue_x</th>
      <th>termdays_x</th>
      <th>good_bad_flag</th>
      <th>age</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>count</th>
      <td>12330.000000</td>
      <td>12330.000000</td>
      <td>12330.000000</td>
      <td>12330.000000</td>
      <td>12330.000000</td>
      <td>12330.000000</td>
      <td>12330.000000</td>
      <td>12330.000000</td>
    </tr>
    <tr>
      <th>mean</th>
      <td>4.536353</td>
      <td>7.307844</td>
      <td>4.645418</td>
      <td>26337.388483</td>
      <td>30507.083698</td>
      <td>33.736010</td>
      <td>0.823682</td>
      <td>34.765288</td>
    </tr>
    <tr>
      <th>std</th>
      <td>8.769082</td>
      <td>3.563097</td>
      <td>0.692577</td>
      <td>12768.636498</td>
      <td>13916.967496</td>
      <td>14.801045</td>
      <td>0.381106</td>
      <td>6.122289</td>
    </tr>
    <tr>
      <th>min</th>
      <td>-118.247009</td>
      <td>-33.868818</td>
      <td>0.000000</td>
      <td>10000.000000</td>
      <td>10000.000000</td>
      <td>15.000000</td>
      <td>0.000000</td>
      <td>23.000000</td>
    </tr>
    <tr>
      <th>25%</th>
      <td>3.355216</td>
      <td>6.466717</td>
      <td>4.000000</td>
      <td>15000.000000</td>
      <td>16500.000000</td>
      <td>30.000000</td>
      <td>1.000000</td>
      <td>30.000000</td>
    </tr>
    <tr>
      <th>50%</th>
      <td>3.579151</td>
      <td>6.615100</td>
      <td>5.000000</td>
      <td>30000.000000</td>
      <td>34500.000000</td>
      <td>30.000000</td>
      <td>1.000000</td>
      <td>34.000000</td>
    </tr>
    <tr>
      <th>75%</th>
      <td>6.661640</td>
      <td>7.422043</td>
      <td>5.000000</td>
      <td>40000.000000</td>
      <td>44000.000000</td>
      <td>30.000000</td>
      <td>1.000000</td>
      <td>38.000000</td>
    </tr>
    <tr>
      <th>max</th>
      <td>151.209290</td>
      <td>71.228069</td>
      <td>5.000000</td>
      <td>60000.000000</td>
      <td>68100.000000</td>
      <td>90.000000</td>
      <td>1.000000</td>
      <td>58.000000</td>
    </tr>
  </tbody>
</table>
</div>

<p>We could use a correlation threshold for removing variables, if there exist some linearity. In this case, we will probably want to keep all of the variables and let the model decide which are relevant.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">display</span><span class="p">(</span><span class="n">df1</span><span class="o">.</span><span class="n">head</span><span class="p">(</span><span class="mi">8</span><span class="p">))</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>customerid</th>
      <th>longitude_gps</th>
      <th>latitude_gps</th>
      <th>employment_status_clients</th>
      <th>loanamount_x</th>
      <th>totaldue_x</th>
      <th>termdays_x</th>
      <th>good_bad_flag</th>
      <th>age</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>1</th>
      <td>8a858e275c7ea5ec015c82482d7c3996</td>
      <td>3.325598</td>
      <td>7.119403</td>
      <td>5</td>
      <td>10000.0</td>
      <td>13000.0</td>
      <td>30</td>
      <td>0</td>
      <td>34.0</td>
    </tr>
    <tr>
      <th>5</th>
      <td>8a858efd5ca70688015cabd1f1e94b55</td>
      <td>3.362850</td>
      <td>6.642485</td>
      <td>5</td>
      <td>10000.0</td>
      <td>11500.0</td>
      <td>15</td>
      <td>1</td>
      <td>28.0</td>
    </tr>
    <tr>
      <th>6</th>
      <td>8a858ea05a859123015a8892914d15b7</td>
      <td>3.365935</td>
      <td>6.564823</td>
      <td>5</td>
      <td>20000.0</td>
      <td>24500.0</td>
      <td>30</td>
      <td>1</td>
      <td>29.0</td>
    </tr>
    <tr>
      <th>7</th>
      <td>8a858ea05a859123015a8892914d15b7</td>
      <td>3.365935</td>
      <td>6.564823</td>
      <td>5</td>
      <td>20000.0</td>
      <td>24500.0</td>
      <td>30</td>
      <td>1</td>
      <td>29.0</td>
    </tr>
    <tr>
      <th>8</th>
      <td>8a858ea05a859123015a8892914d15b7</td>
      <td>3.365935</td>
      <td>6.564823</td>
      <td>5</td>
      <td>20000.0</td>
      <td>24500.0</td>
      <td>30</td>
      <td>1</td>
      <td>29.0</td>
    </tr>
    <tr>
      <th>9</th>
      <td>8a858ea05a859123015a8892914d15b7</td>
      <td>3.365935</td>
      <td>6.564823</td>
      <td>5</td>
      <td>20000.0</td>
      <td>24500.0</td>
      <td>30</td>
      <td>1</td>
      <td>29.0</td>
    </tr>
    <tr>
      <th>10</th>
      <td>8a858ea05a859123015a8892914d15b7</td>
      <td>3.365935</td>
      <td>6.564823</td>
      <td>5</td>
      <td>20000.0</td>
      <td>24500.0</td>
      <td>30</td>
      <td>1</td>
      <td>29.0</td>
    </tr>
    <tr>
      <th>11</th>
      <td>8a858f405d13c45f015d13dd93ec0c1c</td>
      <td>3.290590</td>
      <td>6.612075</td>
      <td>5</td>
      <td>10000.0</td>
      <td>13000.0</td>
      <td>30</td>
      <td>1</td>
      <td>27.0</td>
    </tr>
  </tbody>
</table>
</div>

<h2 id="correlations">Correlations</h2>

<p>We can calculate correlation values to see how the features are related to the outcomeâ€“<code class="highlighter-rouge">good_bad_flag</code>. Correlation does not of course imply causation, but because we are building a model, the correlated features are likely useful for learning a mapping between the clients information and whether or not they are good payers.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df1</span><span class="o">.</span><span class="n">corr</span><span class="p">()[</span><span class="s">'good_bad_flag'</span><span class="p">]</span><span class="o">.</span><span class="n">sort_values</span><span class="p">(</span><span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>good_bad_flag                1.000000
loanamount_x                 0.095799
totaldue_x                   0.085127
age                          0.046017
employment_status_clients   -0.007333
termdays_x                  -0.007663
longitude_gps               -0.011899
latitude_gps                -0.014939
Name: good_bad_flag, dtype: float64
</code></pre></div></div>

<font color="red">Clearly, we can see that linear model will not be a good fit here!</font>

<h1 id="preprocesing">Preprocesing:</h1>

<ul>
  <li>In this step, we shall prepare the dataset for machine learning algorithms.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">sklearn.model_selection</span> <span class="kn">import</span> <span class="n">train_test_split</span>


<span class="c1">#feature matrix
</span><span class="n">x</span> <span class="o">=</span> <span class="n">df1</span><span class="o">.</span><span class="n">drop</span><span class="p">([</span><span class="s">'good_bad_flag'</span><span class="p">,</span><span class="s">'customerid'</span><span class="p">],</span> <span class="n">axis</span> <span class="o">=</span> <span class="mi">1</span><span class="p">)</span>

<span class="c1">#target vector/s
</span><span class="n">y</span> <span class="o">=</span> <span class="n">df1</span><span class="p">[</span><span class="s">'good_bad_flag'</span><span class="p">]</span>

</code></pre></div></div>

<p>Letâ€™s view feature matrix and target vector:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="s">'</span><span class="se">\n</span><span class="s">------------------------------------------------Matrix feature------------------------------------------'</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">x</span><span class="o">.</span><span class="n">head</span><span class="p">(</span><span class="mi">5</span><span class="p">))</span>

<span class="k">print</span><span class="p">(</span><span class="s">'</span><span class="se">\n</span><span class="s">------------------------------------------------Target vector------------------------------------------'</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">y</span><span class="o">.</span><span class="n">head</span><span class="p">(</span><span class="mi">5</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="s">'</span><span class="se">\n</span><span class="s">--------------------------------------------------------------------------------------------------------|'</span><span class="p">)</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>------------------------------------------------Matrix feature------------------------------------------
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>longitude_gps</th>
      <th>latitude_gps</th>
      <th>employment_status_clients</th>
      <th>loanamount_x</th>
      <th>totaldue_x</th>
      <th>termdays_x</th>
      <th>age</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>1</th>
      <td>3.325598</td>
      <td>7.119403</td>
      <td>5</td>
      <td>10000.0</td>
      <td>13000.0</td>
      <td>30</td>
      <td>34.0</td>
    </tr>
    <tr>
      <th>5</th>
      <td>3.362850</td>
      <td>6.642485</td>
      <td>5</td>
      <td>10000.0</td>
      <td>11500.0</td>
      <td>15</td>
      <td>28.0</td>
    </tr>
    <tr>
      <th>6</th>
      <td>3.365935</td>
      <td>6.564823</td>
      <td>5</td>
      <td>20000.0</td>
      <td>24500.0</td>
      <td>30</td>
      <td>29.0</td>
    </tr>
    <tr>
      <th>7</th>
      <td>3.365935</td>
      <td>6.564823</td>
      <td>5</td>
      <td>20000.0</td>
      <td>24500.0</td>
      <td>30</td>
      <td>29.0</td>
    </tr>
    <tr>
      <th>8</th>
      <td>3.365935</td>
      <td>6.564823</td>
      <td>5</td>
      <td>20000.0</td>
      <td>24500.0</td>
      <td>30</td>
      <td>29.0</td>
    </tr>
  </tbody>
</table>
</div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>------------------------------------------------Target vector------------------------------------------



1    0
5    1
6    1
7    1
8    1
Name: good_bad_flag, dtype: int64



--------------------------------------------------------------------------------------------------------|
</code></pre></div></div>

<h3 id="data-splicing">Data splicing:</h3>

<p>We are going to split the data into two sets -  80$\%$ train set and 20$\%$ validation set.  This means, 75$\%$ of the data will be set to train and optimize our machine learning model, and the remaining 20$\%$ will be used to validate the model.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">sklearn.model_selection</span> <span class="kn">import</span> <span class="n">train_test_split</span>


<span class="c1">#data splicing
</span><span class="n">x_train</span><span class="p">,</span> <span class="n">x_val</span><span class="p">,</span> <span class="n">y_train</span><span class="p">,</span> <span class="n">y_val</span> <span class="o">=</span> <span class="n">train_test_split</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">test_size</span> <span class="o">=</span> <span class="mf">0.20</span><span class="p">,</span> <span class="n">random_state</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="n">stratify</span> <span class="o">=</span> <span class="n">y</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">x_train</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">x_val</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(9864, 7)
(2466, 7)
</code></pre></div></div>

<p>Letâ€™s confirm again if data partition criteria was archieved!</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="n">dataset</span> <span class="ow">in</span> <span class="p">[</span><span class="n">y_train</span><span class="p">,</span> <span class="n">y_val</span><span class="p">]:</span>

    <span class="k">print</span><span class="p">(</span><span class="nb">round</span><span class="p">((</span><span class="nb">len</span><span class="p">(</span><span class="n">dataset</span><span class="p">)</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">y</span><span class="p">))</span><span class="o">*</span><span class="mi">100</span><span class="p">,</span> <span class="mi">2</span><span class="p">))</span>

<span class="k">print</span><span class="p">(</span><span class="s">'&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Done!!&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;'</span><span class="p">)</span>

</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>80.0
20.0
&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Done!!&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;
</code></pre></div></div>

<h2 id="machine-learning-models">Machine Learning models</h2>

<p>Data are not usually presented to the machine learning algorithm in exactly the same raw form as it is found. Usually data are scaled to a specific range in a process called normalization.</p>

<p>For linear model, we are going to make selected features to the same scale for optimal performance, which is often achieved by transforming the features in the range [0, 1]: standardize features by removing the mean and scaling to unit variance  using <code class="highlighter-rouge">StandardScaler()</code> class.  This will be done in the pipeline to run multiple processes in the order that they are listed. The purpose and advantage of using pipeline is to assemble several steps that can be cross-validated together while setting different parameters.</p>

<font color="red">However, one of the many qualities of `Decision Trees` and `Random Forest` is that they require very little data preparation. In particular, they donâ€™t require feature scaling or centering at all.</font>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">sklearn</span> <span class="kn">import</span> <span class="n">preprocessing</span>
<span class="kn">from</span> <span class="nn">sklearn.pipeline</span> <span class="kn">import</span> <span class="n">Pipeline</span>
<span class="kn">import</span> <span class="nn">warnings</span>
<span class="n">warnings</span><span class="o">.</span><span class="n">filterwarnings</span><span class="p">(</span><span class="s">'ignore'</span><span class="p">)</span>
<span class="kn">from</span> <span class="nn">sklearn.metrics</span> <span class="kn">import</span> <span class="n">accuracy_score</span>
<span class="c1">#from sklearn.model_selection import GridSearchCV
</span>
<span class="c1">#Logistic regression
</span><span class="kn">from</span> <span class="nn">sklearn.linear_model</span> <span class="kn">import</span> <span class="n">LogisticRegression</span>

<span class="n">LR</span> <span class="o">=</span> <span class="n">Pipeline</span><span class="p">(</span><span class="n">steps</span> <span class="o">=</span> <span class="p">[(</span><span class="s">'preprocessor'</span><span class="p">,</span> <span class="n">preprocessing</span><span class="o">.</span><span class="n">StandardScaler</span><span class="p">()),</span>
                     <span class="p">(</span><span class="s">'model'</span><span class="p">,</span> <span class="n">LogisticRegression</span><span class="p">(</span><span class="n">random_state</span> <span class="o">=</span> <span class="mi">0</span><span class="p">))])</span>
<span class="n">LR</span><span class="o">.</span><span class="n">fit</span><span class="p">(</span><span class="n">x_train</span><span class="p">,</span> <span class="n">y_train</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="s">'</span><span class="se">\n</span><span class="s">--------------------LogisticRegression Classifier-------------------'</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">'Accuracy in training set: {:.2f}'</span> <span class="o">.</span><span class="nb">format</span><span class="p">(</span><span class="n">accuracy_score</span><span class="p">(</span><span class="n">y_train</span><span class="p">,</span> <span class="n">LR</span><span class="o">.</span><span class="n">predict</span><span class="p">(</span><span class="n">x_train</span><span class="p">))))</span>
<span class="k">print</span><span class="p">(</span><span class="s">'Accuracy in validation set: {:.2f}'</span> <span class="o">.</span><span class="nb">format</span><span class="p">(</span><span class="n">accuracy_score</span><span class="p">(</span><span class="n">y_val</span><span class="p">,</span> <span class="n">LR</span><span class="o">.</span><span class="n">predict</span><span class="p">(</span><span class="n">x_val</span><span class="p">))))</span>



<span class="c1">#Decision Tree
</span><span class="kn">from</span> <span class="nn">sklearn.tree</span> <span class="kn">import</span> <span class="n">DecisionTreeClassifier</span>

<span class="n">DT</span> <span class="o">=</span> <span class="n">DecisionTreeClassifier</span><span class="p">()</span>
<span class="n">DT</span><span class="o">.</span><span class="n">fit</span><span class="p">(</span><span class="n">x_train</span><span class="p">,</span> <span class="n">y_train</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="s">'</span><span class="se">\n</span><span class="s">-----------------------Decision Tree Classifier---------------------'</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">'Accuracy in training set: {:.2f}'</span> <span class="o">.</span><span class="nb">format</span><span class="p">(</span><span class="n">accuracy_score</span><span class="p">(</span><span class="n">y_train</span><span class="p">,</span> <span class="n">DT</span><span class="o">.</span><span class="n">predict</span><span class="p">(</span><span class="n">x_train</span><span class="p">))))</span>
<span class="k">print</span><span class="p">(</span><span class="s">'Accuracy in validation set: {:.2f}'</span> <span class="o">.</span><span class="nb">format</span><span class="p">(</span><span class="n">accuracy_score</span><span class="p">(</span><span class="n">y_val</span><span class="p">,</span> <span class="n">DT</span><span class="o">.</span><span class="n">predict</span><span class="p">(</span><span class="n">x_val</span><span class="p">))))</span>



<span class="c1">#Random forest
</span><span class="kn">from</span> <span class="nn">sklearn.ensemble</span> <span class="kn">import</span> <span class="n">RandomForestClassifier</span>

<span class="c1">#instantiate random forest class
</span><span class="n">RF</span> <span class="o">=</span> <span class="n">RandomForestClassifier</span><span class="p">(</span><span class="n">random_state</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">n_jobs</span><span class="o">=-</span><span class="mi">1</span><span class="p">)</span>

<span class="n">RF</span><span class="o">.</span><span class="n">fit</span><span class="p">(</span><span class="n">x_train</span><span class="p">,</span> <span class="n">y_train</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="s">'</span><span class="se">\n</span><span class="s">-----------------------Random Forest Classifier---------------------'</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">'Accuracy in training set: {:.2f}'</span> <span class="o">.</span><span class="nb">format</span><span class="p">(</span><span class="n">accuracy_score</span><span class="p">(</span><span class="n">y_train</span><span class="p">,</span> <span class="n">RF</span><span class="o">.</span><span class="n">predict</span><span class="p">(</span><span class="n">x_train</span><span class="p">))))</span>
<span class="k">print</span><span class="p">(</span><span class="s">'Accuracy in validation set: {:.2f}'</span> <span class="o">.</span><span class="nb">format</span><span class="p">(</span><span class="n">accuracy_score</span><span class="p">(</span><span class="n">y_val</span><span class="p">,</span> <span class="n">RF</span><span class="o">.</span><span class="n">predict</span><span class="p">(</span><span class="n">x_val</span><span class="p">))))</span>


</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>--------------------LogisticRegression Classifier-------------------
Accuracy in training set: 0.82
Accuracy in validation set: 0.82

-----------------------Decision Tree Classifier---------------------
Accuracy in training set: 1.00
Accuracy in validation set: 0.97

-----------------------Random Forest Classifier---------------------
Accuracy in training set: 1.00
Accuracy in validation set: 0.97
</code></pre></div></div>

<font color="green">We know that accuracy works well on balanced datasets.  The dataset is imbalanced, so we cannot use accuracy to quantify model performance. So we need another perfomance measure for imbalanced datasets.  We shall consider using `f1 score metric` to quantify the perfomance.</font>

<h1 id="model-evaluation">Model evaluation</h1>

<p>We shall now show a <code class="highlighter-rouge">confusion matrix</code> showing the frequency of misclassifications by our
classifier. We shall also look at <code class="highlighter-rouge">receiver operating characteristics (ROC)</code> &amp; <code class="highlighter-rouge">area under curve (AUC)</code> to see the performance of each classifier accross various thresholds.</p>

<p>For a perfect model, the classifier performance, has AUC = 1.  Of course thatâ€™s not achievable in real-world situations.
So we want the classifier that will achieve AUC value as close as possible to 1.</p>

<h3 id="1-logistic-regression">1. Logistic Regression</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">sklearn.metrics</span> <span class="kn">import</span> <span class="n">confusion_matrix</span>
<span class="kn">from</span> <span class="nn">sklearn.metrics</span> <span class="kn">import</span> <span class="n">classification_report</span>
<span class="kn">from</span> <span class="nn">sklearn.metrics</span> <span class="kn">import</span> <span class="n">f1_score</span><span class="p">,</span> <span class="n">roc_auc_score</span><span class="p">,</span> <span class="n">roc_curve</span>

<span class="c1">#predictions
</span><span class="n">pred1</span> <span class="o">=</span> <span class="n">LR</span><span class="o">.</span><span class="n">predict</span><span class="p">(</span><span class="n">x_val</span><span class="p">)</span>

<span class="n">mat1</span> <span class="o">=</span> <span class="n">confusion_matrix</span><span class="p">(</span><span class="n">y_val</span><span class="p">,</span> <span class="n">pred1</span><span class="p">)</span>

<span class="n">target_names</span> <span class="o">=</span>  <span class="p">[</span><span class="s">'Bad payer'</span><span class="p">,</span> <span class="s">'Good payer'</span><span class="p">]</span>

<span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span> <span class="o">=</span> <span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">6</span><span class="p">))</span>
<span class="n">sns</span><span class="o">.</span><span class="nb">set</span><span class="p">(</span><span class="n">font_scale</span> <span class="o">=</span> <span class="mf">1.2</span><span class="p">)</span>
<span class="n">sns</span><span class="o">.</span><span class="n">heatmap</span><span class="p">(</span><span class="n">mat1</span><span class="p">,</span> <span class="n">cbar</span> <span class="o">=</span> <span class="bp">True</span><span class="p">,</span> <span class="n">square</span> <span class="o">=</span> <span class="bp">True</span><span class="p">,</span> <span class="n">annot</span> <span class="o">=</span> <span class="bp">True</span><span class="p">,</span> <span class="n">yticklabels</span> <span class="o">=</span> <span class="n">target_names</span><span class="p">,</span>
            <span class="n">annot_kws</span><span class="o">=</span><span class="p">{</span><span class="s">'size'</span><span class="p">:</span> <span class="mi">15</span><span class="p">},</span> <span class="n">xticklabels</span><span class="o">=</span><span class="n">target_names</span><span class="p">,</span> <span class="n">cmap</span> <span class="o">=</span> <span class="s">'RdPu'</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">'Predicted value'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">'True value'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">tight_layout</span><span class="p">()</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>

</code></pre></div></div>

<p><img src="https://drive.google.com/uc?export=view&amp;id=1sdBcNp7RpLO1f7_gHTeaY3KxU5Nqoyej" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">summ_conf1</span> <span class="o">=</span> <span class="n">classification_report</span><span class="p">(</span><span class="n">y_val</span><span class="p">,</span> <span class="n">pred1</span><span class="p">,</span> <span class="n">target_names</span> <span class="o">=</span> <span class="n">target_names</span><span class="p">)</span>


<span class="k">print</span><span class="p">(</span><span class="s">'</span><span class="se">\n</span><span class="s">------------Logistic Regression Classification Report----------------'</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="p">,</span> <span class="n">summ_conf1</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">'--'</span><span class="o">*</span><span class="mi">33</span><span class="p">)</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>------------Logistic Regression Classification Report----------------

               precision    recall  f1-score   support

   Bad payer       0.00      0.00      0.00       435
  Good payer       0.82      1.00      0.90      2031

   micro avg       0.82      0.82      0.82      2466
   macro avg       0.41      0.50      0.45      2466
weighted avg       0.68      0.82      0.74      2466

------------------------------------------------------------------
</code></pre></div></div>

<h3 id="roc--auc---logistic-regression">ROC &amp; AUC - Logistic Regression:</h3>

<p>The receiver operating characteristic (ROC) curve is another common tool used with binary classifiers. The higher the recall (TPR), the more false positives (FPR) the classifier produces. The dotted line represents the ROC curve of a purely random classifier; a good classifier stays as far away from that line as possible (toward the top-left corner).</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#predicting class probabilities for input x_val
</span><span class="n">probs1</span> <span class="o">=</span> <span class="n">LR</span><span class="o">.</span><span class="n">predict_proba</span><span class="p">(</span><span class="n">x_val</span><span class="p">)[:,</span> <span class="mi">1</span><span class="p">]</span>

<span class="c1">#Calculate the area under the roc curve
</span><span class="n">auc1</span> <span class="o">=</span> <span class="n">roc_auc_score</span><span class="p">(</span><span class="n">y_val</span><span class="p">,</span> <span class="n">probs1</span><span class="p">)</span>

</code></pre></div></div>

<p>Plot receiver operating characteristic curve:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fpr1</span><span class="p">,</span> <span class="n">tpr1</span><span class="p">,</span> <span class="n">thresholds1</span> <span class="o">=</span> <span class="n">roc_curve</span><span class="p">(</span><span class="n">y_val</span><span class="p">,</span> <span class="n">probs1</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">(</span><span class="s">'bmh'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span> <span class="o">=</span> <span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">5</span><span class="p">))</span>

<span class="c1"># Plot the roc curve
</span><span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">fpr1</span><span class="p">,</span> <span class="n">tpr1</span><span class="p">,</span> <span class="s">'b'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span> <span class="n">linestyle</span> <span class="o">=</span> <span class="s">'--'</span><span class="p">,</span> <span class="n">color</span> <span class="o">=</span> <span class="s">'r'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">'False Positive Rate </span><span class="se">\n</span><span class="s"> (100</span><span class="si">%-</span><span class="s">specificity)'</span><span class="p">,</span> <span class="n">size</span> <span class="o">=</span> <span class="mi">16</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">'True Positive Rate </span><span class="se">\n</span><span class="s"> (Sensitivity)'</span><span class="p">,</span> <span class="n">size</span> <span class="o">=</span> <span class="mi">16</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s">'Receiver Operating Characteristic Curve, AUC = </span><span class="si">%0.4</span><span class="s">f'</span> <span class="o">%</span> <span class="n">auc1</span><span class="p">,</span> <span class="n">size</span> <span class="o">=</span> <span class="mi">18</span><span class="p">)</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Text(0.5, 1.0, 'Receiver Operating Characteristic Curve, AUC = 0.5812')
</code></pre></div></div>

<p><img src="https://drive.google.com/uc?export=view&amp;id=1OnwEm6HzTLTp9VP0-E1hzY9t5ruKfOv7" alt="png" /></p>

<font color="red"> Recall: there was no correlation among features, consequently, Linear Regression model is performing very bad when looking at `f1 score` and `ROC &amp; AUC` </font>

<h3 id="2-decision-tree">2. Decision Tree</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">pred2</span> <span class="o">=</span> <span class="n">DT</span><span class="o">.</span><span class="n">predict</span><span class="p">(</span><span class="n">x_val</span><span class="p">)</span>


<span class="n">mat2</span> <span class="o">=</span> <span class="n">confusion_matrix</span><span class="p">(</span><span class="n">y_val</span><span class="p">,</span> <span class="n">pred2</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span> <span class="o">=</span> <span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">6</span><span class="p">))</span>
<span class="n">sns</span><span class="o">.</span><span class="nb">set</span><span class="p">(</span><span class="n">font_scale</span> <span class="o">=</span> <span class="mf">1.2</span><span class="p">)</span>
<span class="n">sns</span><span class="o">.</span><span class="n">heatmap</span><span class="p">(</span><span class="n">mat2</span><span class="p">,</span> <span class="n">cbar</span> <span class="o">=</span> <span class="bp">True</span><span class="p">,</span> <span class="n">square</span> <span class="o">=</span> <span class="bp">True</span><span class="p">,</span> <span class="n">annot</span> <span class="o">=</span> <span class="bp">True</span><span class="p">,</span> <span class="n">yticklabels</span> <span class="o">=</span> <span class="n">target_names</span><span class="p">,</span>
            <span class="n">annot_kws</span><span class="o">=</span><span class="p">{</span><span class="s">'size'</span><span class="p">:</span> <span class="mi">15</span><span class="p">},</span> <span class="n">xticklabels</span><span class="o">=</span><span class="n">target_names</span><span class="p">,</span> <span class="n">cmap</span> <span class="o">=</span> <span class="s">'RdPu'</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">'Predicted value'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">'True value'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">tight_layout</span><span class="p">()</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="https://drive.google.com/uc?export=view&amp;id=1Dzj8cnnwqutg8KuE4hvlqUysXrkLvBoS" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">summ_conf2</span> <span class="o">=</span> <span class="n">classification_report</span><span class="p">(</span><span class="n">y_val</span><span class="p">,</span> <span class="n">pred2</span><span class="p">,</span> <span class="n">target_names</span> <span class="o">=</span> <span class="n">target_names</span><span class="p">)</span>


<span class="k">print</span><span class="p">(</span><span class="s">'</span><span class="se">\n</span><span class="s">------------Decision Trees Classification Report----------------'</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="p">,</span> <span class="n">summ_conf2</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">'--'</span><span class="o">*</span><span class="mi">35</span><span class="p">)</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>------------Decision Trees Classification Report----------------

               precision    recall  f1-score   support

   Bad payer       0.90      0.92      0.91       435
  Good payer       0.98      0.98      0.98      2031

   micro avg       0.97      0.97      0.97      2466
   macro avg       0.94      0.95      0.94      2466
weighted avg       0.97      0.97      0.97      2466

----------------------------------------------------------------------
</code></pre></div></div>

<h3 id="roc--auc---decision-tree">ROC &amp; AUC - Decision Tree:</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">probs2</span> <span class="o">=</span> <span class="n">DT</span><span class="o">.</span><span class="n">predict_proba</span><span class="p">(</span><span class="n">x_val</span><span class="p">)[:,</span> <span class="mi">1</span><span class="p">]</span>

<span class="n">auc2</span> <span class="o">=</span> <span class="n">roc_auc_score</span><span class="p">(</span><span class="n">y_val</span><span class="p">,</span> <span class="n">probs2</span><span class="p">)</span>
</code></pre></div></div>

<p>Plot receiver operating characteristic curve for Decision Tree Classifier:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fpr2</span><span class="p">,</span> <span class="n">tpr2</span><span class="p">,</span> <span class="n">thresholds2</span> <span class="o">=</span> <span class="n">roc_curve</span><span class="p">(</span><span class="n">y_val</span><span class="p">,</span> <span class="n">probs2</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">(</span><span class="s">'bmh'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span> <span class="o">=</span> <span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">5</span><span class="p">))</span>

<span class="c1"># Plot the roc curve
</span><span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">fpr2</span><span class="p">,</span> <span class="n">tpr2</span><span class="p">,</span> <span class="s">'b'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span> <span class="n">linestyle</span> <span class="o">=</span> <span class="s">'--'</span><span class="p">,</span> <span class="n">color</span> <span class="o">=</span> <span class="s">'r'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">'False Positive Rate </span><span class="se">\n</span><span class="s"> (100</span><span class="si">%-</span><span class="s">specificity)'</span><span class="p">,</span> <span class="n">size</span> <span class="o">=</span> <span class="mi">16</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">'True Positive Rate </span><span class="se">\n</span><span class="s"> (Sensitivity)'</span><span class="p">,</span> <span class="n">size</span> <span class="o">=</span> <span class="mi">16</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s">'Receiver Operating Characteristic Curve, AUC = </span><span class="si">%0.4</span><span class="s">f'</span> <span class="o">%</span> <span class="n">auc2</span><span class="p">,</span> <span class="n">size</span> <span class="o">=</span> <span class="mi">18</span><span class="p">)</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Text(0.5, 1.0, 'Receiver Operating Characteristic Curve, AUC = 0.9484')
</code></pre></div></div>

<p><img src="https://drive.google.com/uc?export=view&amp;id=129K2o0aBGMyMRmDzbcvrWBTByKwF83r5" alt="png" /></p>

<font color="green">We see that Decision Tree model is performing fairly well when looking at `f1 score` and `ROC &amp; AUC` </font>

<h2 id="3-random-forest">3. Random Forest</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">pred3</span> <span class="o">=</span> <span class="n">RF</span><span class="o">.</span><span class="n">predict</span><span class="p">(</span><span class="n">x_val</span><span class="p">)</span>

<span class="n">mat3</span> <span class="o">=</span> <span class="n">confusion_matrix</span><span class="p">(</span><span class="n">y_val</span><span class="p">,</span> <span class="n">pred3</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span> <span class="o">=</span> <span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">6</span><span class="p">))</span>
<span class="n">sns</span><span class="o">.</span><span class="nb">set</span><span class="p">(</span><span class="n">font_scale</span> <span class="o">=</span> <span class="mf">1.2</span><span class="p">)</span>
<span class="n">sns</span><span class="o">.</span><span class="n">heatmap</span><span class="p">(</span><span class="n">mat3</span><span class="p">,</span> <span class="n">cbar</span> <span class="o">=</span> <span class="bp">True</span><span class="p">,</span> <span class="n">square</span> <span class="o">=</span> <span class="bp">True</span><span class="p">,</span> <span class="n">annot</span> <span class="o">=</span> <span class="bp">True</span><span class="p">,</span><span class="n">yticklabels</span> <span class="o">=</span> <span class="n">target_names</span><span class="p">,</span>
            <span class="n">annot_kws</span><span class="o">=</span><span class="p">{</span><span class="s">'size'</span><span class="p">:</span> <span class="mi">15</span><span class="p">},</span> <span class="n">xticklabels</span><span class="o">=</span><span class="n">target_names</span><span class="p">,</span> <span class="n">cmap</span> <span class="o">=</span> <span class="s">'RdPu'</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">'Predicted value'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">'True value'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">tight_layout</span><span class="p">()</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="https://drive.google.com/uc?export=view&amp;id=1RfrSmp9w5T1_Si38ipdfEgCCH-nZxQej" alt="png" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">summ_conf3</span> <span class="o">=</span> <span class="n">classification_report</span><span class="p">(</span><span class="n">y_val</span><span class="p">,</span> <span class="n">pred3</span><span class="p">,</span> <span class="n">target_names</span> <span class="o">=</span> <span class="n">target_names</span><span class="p">)</span>


<span class="k">print</span><span class="p">(</span><span class="s">'</span><span class="se">\n</span><span class="s">------------Random Forest Classification Report----------------'</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="p">,</span> <span class="n">summ_conf3</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">'--'</span><span class="o">*</span><span class="mi">33</span><span class="p">)</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>------------Random Forest Classification Report----------------

               precision    recall  f1-score   support

   Bad payer       0.91      0.92      0.92       435
  Good payer       0.98      0.98      0.98      2031

   micro avg       0.97      0.97      0.97      2466
   macro avg       0.95      0.95      0.95      2466
weighted avg       0.97      0.97      0.97      2466

------------------------------------------------------------------
</code></pre></div></div>

<h3 id="roc--auc---random-forest">ROC &amp; AUC - Random Forest:</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">probs3</span> <span class="o">=</span> <span class="n">RF</span><span class="o">.</span><span class="n">predict_proba</span><span class="p">(</span><span class="n">x_val</span><span class="p">)[:,</span> <span class="mi">1</span><span class="p">]</span>

<span class="n">auc3</span> <span class="o">=</span> <span class="n">roc_auc_score</span><span class="p">(</span><span class="n">y_val</span><span class="p">,</span> <span class="n">probs3</span><span class="p">)</span>
</code></pre></div></div>

<p>Plot receiver operating characteristic curve for Random Forest Classifier:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fpr3</span><span class="p">,</span> <span class="n">tpr3</span><span class="p">,</span> <span class="n">thresholds3</span> <span class="o">=</span> <span class="n">roc_curve</span><span class="p">(</span><span class="n">y_val</span><span class="p">,</span> <span class="n">probs3</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">(</span><span class="s">'bmh'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span> <span class="o">=</span> <span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">5</span><span class="p">))</span>

<span class="c1"># Plot the roc curve
</span><span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">fpr3</span><span class="p">,</span> <span class="n">tpr3</span><span class="p">,</span> <span class="s">'b'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span> <span class="n">linestyle</span> <span class="o">=</span> <span class="s">'--'</span><span class="p">,</span> <span class="n">color</span> <span class="o">=</span> <span class="s">'r'</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">'False Positive Rate </span><span class="se">\n</span><span class="s"> (100</span><span class="si">%-</span><span class="s">specificity)'</span><span class="p">,</span> <span class="n">size</span> <span class="o">=</span> <span class="mi">16</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">'True Positive Rate </span><span class="se">\n</span><span class="s"> (Sensitivity)'</span><span class="p">,</span> <span class="n">size</span> <span class="o">=</span> <span class="mi">16</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s">'Receiver Operating Characteristic Curve, AUC = </span><span class="si">%0.4</span><span class="s">f'</span> <span class="o">%</span> <span class="n">auc3</span><span class="p">,</span> <span class="n">size</span> <span class="o">=</span> <span class="mi">18</span><span class="p">)</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Text(0.5, 1.0, 'Receiver Operating Characteristic Curve, AUC = 0.9857')
</code></pre></div></div>

<p><img src="https://drive.google.com/uc?export=view&amp;id=1fxTnCdjiAmLPjEOrfkxaz_DKtwuGrnO6" alt="png" /></p>

<font color="green">We see that Decision Tree model is performing pretty good when looking at `f1 score` and `ROC &amp; AUC` </font>

<h3 id="conclusions-from-machine-learning-models">Conclusions from Machine Learning Models</h3>

<p>From the <code class="highlighter-rouge">f1 score</code> and the <code class="highlighter-rouge">Area Under the Receiver Operating Characteristic Curve</code>, <code class="highlighter-rouge">Random Forest</code> performs the best.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
</code></pre></div></div>
:ET